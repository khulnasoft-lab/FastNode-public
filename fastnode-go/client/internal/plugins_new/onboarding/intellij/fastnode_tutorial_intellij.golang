/*
Welcome to...

        `hmy+.               ://:
       .mMMMMMNho:`          NMMm
      :NMMMMMMMMMMMds/.`     NMMm            :ss:
     +NMMMMMMMMMMMMMMMMmy+   NMMm           -MMMM-   ---
   `oMMMMMMMMMMMMMMMMMMMMo   NMMm            /ss/   :MMM+
  `yMMMMMMMMNshmNMMMMMMMN`   NMMm                   /MMM+
 .dMMMMMMMMm/hmhssydmMMM+    NMMm    `/yhhy. shhy ohmMMMmhhhh.  ./ydmmmdho-
 omMMMMMMMd/mMMMMMmhsosy`    NMMm  .omMMmo.  mMMN odmMMMmdddd. omMNdsoshNMNy`
  .+dMMMMy/mMMMMMMMMMMm-     NMMm-yNMMh/`    mMMN   /MMM+     sMMN:`   `:NMMy
    `-ymo/NMMMMMMMMMMMd      NMMMNMMN/       mMMN   :MMM+     MMMNdddddddNMMN
       ``hMMMMMMMMMMMM:      NMMm+mMMNs.     mMMN   :MMM+     MMMh//////////:
         `:yNMMMMMMMMh       NMMm `/dMMNy-   mMMN   :MMM+  `. sMMNo`    `-:
            .+mMMMMMM-       NMMm   `/dMMNy- mMMN   .MMMNddNN/ +NMMNdhydNNMs
              `:yMMMy        yhhs     `/hhhh shhs    :ymmmdho:  `/sdmmmmhs/`
                 `om.
*/

/*  Fastnode is your programming copilot. Fastnode will try to show you the right
    information at the right time as you code to prevent you from context
    switching out of your current line of thought.

    This tutorial will teach you how to use all of Fastnode's core features. You
    should be able to learn everything in 5 minutes.

    If you get stuck at any point, please visit https://help.khulnasoft.com/ or file
    an issue at https://github.com/khulnasoft-lab/issue-tracker.
*/


/*  GO TUTORIAL ================================================================

    Not writing Go? Open tutorials for other languages by running the
    following actions:

    * For Python, run       "Fastnode: Python Tutorial"
    * For Javascript, run   "Fastnode: Javascript Tutorial"
*/


/*  BEFORE WE START ============================================================

    Fastnode's plugin will by default try to start the Fastnode backend when
    the editor first starts. You can change this behavior by opening the Fastnode
    plugin's settings, and changing 'Start Fastnode at startup'.

    Look for the Fastnode icon in the bottom right corner of the status bar —
    It will tell you if Fastnode is ready and working. If the indicator is red,
    then you'll have to start the Fastnode Engine manually before proceeding with
    the rest of this tutorial.
*/


/*  CODE COMPLETIONS ===========================================================

    Fastnode analyzes your code and uses machine learning to show you completions
    for what you're going to type next.

    If you have your editor configured to show autocompletions, then Fastnode will
    show you completions automatically as you type.

    If you don't have autocompletions on, you can press ctrl+space to request
    completions at any time.

    You can toggle autocompletions in the editor preferences under 'Editor' →
    'General' → 'Code Completion' and changing 'Show suggestions as you type'.

    Look for Fastnode's icon on the left-hand side to see which completions are
    coming from Fastnode.


    TRY IT =====================================================================

    Let's write a simple Go statement.

    • Put your cursor at the end of the line marked with "<--".
    • Type "P" here for completions and write the following statement:

    fmt.Println("Hello World")
*/


    package main
    import "fmt"

    func main() {
      fmt.     // <-- type "P"
    }


/*  CODE COMPLETIONS ON DEMAND =================================================

    Remember that you can use the keyboard shortcut "ctrl+space" at any time to
    request code completions.


    TRY IT =====================================================================

    Let's manually request completions for the same statement.

    • Put your cursor at the end of the line marked with "<--".
    • Press ctrl+space to request code completions.
*/


    fmt.     // <-- press ctrl+space


/*  That's it!

    Now you know how to use Fastnode's completions to boost your productivity. You
    can access this tutorial at any time by running the action
    'Fastnode: Go Tutorial'.

    Learn more about the Fastnode plugin at its help page:

    https://help.khulnasoft.com/


    ____________________________________________________________________________

    Fastnode is under active development. You can expect its features to become
    smarter and more featured over time.

    We love hearing from you! Vist https://github.com/khulnasoft-lab/issue-tracker at
    any time to report issues or submit feature requests.
*/
