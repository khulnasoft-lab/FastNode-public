// Code generated by go-bindata.
// sources:
// server/templates/error.html
// server/templates/files.html
// server/templates/index.html
// server/templates/oops.html
// server/templates/pulls.html
// server/templates/recommend.html
// server/templates/related.html
// server/templates/search.html
// server/templates/validate-blocks.html
// server/templates/validate-files.html
// server/templates/validate.html
// server/static/oops.css
// server/static/related.css
// server/static/style.css
// DO NOT EDIT!

package knowledge

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _serverTemplatesErrorHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\x41\xae\xc3\x20\x0c\x04\xd0\x35\x39\x05\xe2\x00\xf1\xfe\x0b\xb2\xfb\x07\x49\xc3\x54\xa0\xd2\xa6\xb2\x2d\x54\x14\xe5\xee\x15\xa4\xbb\x91\xed\x79\xb2\x4f\xfa\x2c\xcb\x64\x7c\xc2\x1a\x97\xc9\x18\x5f\xf2\xeb\x61\x19\x25\x38\xd1\x56\x20\x09\x50\x67\xb5\xbd\x11\x9c\xe2\xa3\xb4\x89\x38\x9b\x18\xf7\xe0\x48\xc0\x15\x4c\xa2\xab\xe6\x8d\x46\x61\xee\xfb\x2e\xd2\x8f\xf4\xb7\x3d\xb6\x41\xc7\x5c\xed\x56\x56\x91\x00\xe6\x9d\xfb\xcc\xfc\xf7\xf4\x67\x8f\x63\x1e\xe9\x3c\xfb\x21\xc5\x5c\x07\x71\x55\x3d\x5d\x5f\x7e\x03\x00\x00\xff\xff\xe9\x31\xf4\xab\xad\x00\x00\x00")

func serverTemplatesErrorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesErrorHtml,
		"server/templates/error.html",
	)
}

func serverTemplatesErrorHtml() (*asset, error) {
	bytes, err := serverTemplatesErrorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/error.html", size: 173, mode: os.FileMode(420), modTime: time.Unix(1594671898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesFilesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4f\x8f\xdb\x2c\x10\x87\xcf\xf8\x53\x20\xde\xf7\x6c\xee\x15\xf6\xa5\x52\xd5\x43\xb4\xdd\x6e\xdb\x0f\x40\xcc\x78\x8d\x8a\x71\x02\x83\xd5\x08\xf9\xbb\x57\xfc\xb1\x93\x48\xdd\x53\xc8\xcc\xfc\x1e\x3f\x1e\x0b\x31\xe1\x6c\xfa\xa6\x21\x62\x02\xa9\xfa\x86\x10\x61\xb4\xfd\x4d\x1d\x98\x8e\x79\xbc\x19\xf0\x13\x00\x32\x8a\xb7\x0b\x74\x0c\xe1\x0f\xf2\xc1\x7b\x46\x27\x07\x63\xc7\xb8\x07\xb7\x82\xe3\x1e\x25\xea\x81\xe7\x40\x9b\xfa\x7d\x43\x04\x2f\xc8\x86\x88\xf3\xa2\x6e\xe9\x40\xc4\xb8\xb8\x99\xca\x01\xf5\x62\x3b\xc6\x87\x45\x81\x95\x2b\xf7\x20\xdd\x30\x71\x46\x67\xc0\x69\x51\x1d\x7b\xfd\xf6\xe3\x27\xa3\x56\xce\xd0\xb1\x14\x49\x3c\x42\x84\xb6\x97\x80\x55\xa5\x64\xf6\xa1\x6b\x00\x77\x63\xd4\xc1\x35\x68\x07\x8a\xae\xd2\x04\xe8\x58\x8c\xed\xf7\xd4\xd9\x36\x46\x07\x23\xbd\xef\x4a\xac\xe0\x2e\xfd\x33\x31\x9c\x67\x8d\x3b\x71\x5e\x14\xb0\x9d\xf3\x45\x1b\xf0\x77\x84\x81\x01\x41\xfd\xc3\xe9\x63\xc2\x6b\x30\x86\xbe\xc1\x35\x80\xc7\x83\x24\x0d\x82\xb3\x12\xf5\x0a\x79\xf5\x3c\xbd\x6b\x59\xd4\xe4\xf2\x6f\x8c\x7a\xa4\xed\x57\xe9\xb3\xc1\xb6\xa5\x1a\x89\xd1\x49\xfb\x0e\xf4\xff\x51\x1b\xa0\x9f\x3a\xda\xee\x5d\x92\x8c\x94\x5e\x2b\x3f\xf5\xb3\x25\x21\x42\xd6\x4f\x16\x63\x8e\xb5\xbf\xde\x4e\xdb\xc6\xfa\xa7\xbf\x82\xcb\x32\x2e\xb8\xd2\x6b\x3d\xa2\x3c\x1b\xa8\x40\xa3\x2d\xf8\x4a\x3c\x2c\x52\x31\x59\x14\xd0\x29\x8d\x54\x95\x94\x76\x75\x3c\x9d\xd5\x03\xc6\x86\xf9\x0c\xf7\xe6\x07\x82\xff\x9d\x62\xcc\x0f\x68\x5f\xf2\x7c\x55\x7e\xaa\x1c\xd6\x59\x1c\xd5\xe3\x03\xef\xfc\x3d\xf5\x79\xb1\x08\x16\x0f\xc3\xa7\x88\xe0\x87\x6f\x8c\x60\xd5\xbe\x52\x9e\x97\xd0\x37\x0f\xf5\xfc\x71\xc0\x78\x28\x33\x69\xeb\xfd\xcb\x42\x67\x89\xc3\xa4\xed\x3b\x4d\xef\xe0\xe9\xb8\x04\xab\xda\x63\x9d\x07\x54\xf0\x72\x27\x04\x2f\x17\xf0\x6f\x00\x00\x00\xff\xff\x5b\x16\x4e\xe1\x88\x03\x00\x00")

func serverTemplatesFilesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesFilesHtml,
		"server/templates/files.html",
	)
}

func serverTemplatesFilesHtml() (*asset, error) {
	bytes, err := serverTemplatesFilesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/files.html", size: 904, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x4d\x6a\xc4\x30\x0c\x46\xd7\x99\x53\x04\x1f\xa0\xba\x80\xe2\x43\xb4\xd0\xbd\x6a\x7f\xc5\xa6\xca\x0f\x96\x6a\x9a\xdb\x97\x49\x32\xfb\xec\x1e\xfe\x78\x0f\x2c\x2e\x3e\x6b\x7c\x0c\x5c\x20\x39\x3e\x86\x81\xb5\x2e\x3f\x63\x83\x4e\xc1\x7c\x57\x58\x01\x3c\x8c\xbe\x6f\x98\x82\xe3\xcf\x29\x99\x85\xb1\x34\x7c\x4f\x81\x0c\xad\xa3\x91\xb9\x78\x4d\x74\x08\x6f\xcf\xfd\x59\xa4\x2b\xc9\x5f\x6b\xde\x8f\x74\xae\x7d\x4c\x2a\x66\x93\x6d\x92\x10\x99\x72\xed\xc7\xb2\x5d\xef\xdb\xaf\x6a\x64\x79\xe5\xd3\x9a\xb1\x48\x27\x83\xb4\x54\x28\xc4\x8f\x03\x98\xe4\x8e\xd5\x90\xd6\x79\xc6\x92\x29\xc4\xf7\x17\xdf\x74\xbb\x68\xcd\xe2\xa0\x10\x3f\x2f\x3c\x4d\xa6\xf3\x3b\x4c\xe7\xe5\xfe\x03\x00\x00\xff\xff\x8f\x3b\xb8\x94\x41\x01\x00\x00")

func serverTemplatesIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesIndexHtml,
		"server/templates/index.html",
	)
}

func serverTemplatesIndexHtml() (*asset, error) {
	bytes, err := serverTemplatesIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/index.html", size: 321, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesOopsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x4e\x02\x31\x10\x86\xcf\xf0\x14\x93\xde\xed\x98\xe0\xc9\x74\x89\x17\x2f\x7a\x30\x3e\xc2\xd2\x0e\x6c\xa5\xdb\x36\x33\xc3\xca\x86\xf0\xee\x66\x85\x85\x8b\xde\xda\xfe\x5f\xfe\xff\x4b\x5d\xa7\x7d\x5a\x2f\x01\x5c\x47\x6d\x98\x0e\x00\x2e\xc5\xbc\x07\xa6\xd4\x18\xd1\x31\x91\x74\x44\x6a\xa0\x63\xda\x36\x06\xd1\x87\x6c\xbf\x24\x50\x8a\x03\xdb\x4c\x8a\xb9\xf6\xd8\xb5\x7e\xff\xb0\x2d\x59\x5f\x56\x76\x65\x1f\x71\x73\x88\x29\xe0\x37\x6d\x7e\x13\xeb\x45\xcc\x7a\xb9\x58\xfc\x53\xad\x63\xa5\xc6\x28\x1d\x15\x27\x72\x9e\x12\xe2\x81\x18\x45\x5b\x8d\x1e\x4b\xa9\x72\x2d\x02\x70\x38\xfb\xba\x4d\x09\xe3\x55\xdc\x53\x56\xe2\xcb\x05\xc0\x85\x38\x80\x4f\xad\x48\x63\x26\x9a\xd8\xac\x3f\x4a\x15\x87\x21\x0e\x37\x28\xf6\x3b\x10\xf6\x8d\xe9\x54\xab\x3c\x23\x46\x1b\xfb\xdd\x81\xad\x2f\x3d\x7e\x1e\xeb\xd3\xdb\xf8\x6e\x77\x71\x6b\xfe\xaa\x25\xe6\xc2\xb7\x04\xe0\x74\xb2\xaf\xd3\xd3\xf9\x3c\xc3\xf7\x2d\x87\x77\x3d\x87\x17\x6b\x87\x97\xff\xff\x09\x00\x00\xff\xff\x08\x61\x13\x14\x87\x01\x00\x00")

func serverTemplatesOopsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesOopsHtml,
		"server/templates/oops.html",
	)
}

func serverTemplatesOopsHtml() (*asset, error) {
	bytes, err := serverTemplatesOopsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/oops.html", size: 391, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesPullsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcd\x6e\xdd\x2c\x10\x5d\x73\x9f\x02\xa1\x6f\xfb\x99\x7d\x84\x2d\xb5\xa9\xda\x2e\xfa\x93\xa6\xe9\x03\x10\x33\x8e\x51\x31\xdc\xc0\x70\x55\xcb\xf2\xbb\x57\xf8\x17\xe7\x26\x52\x57\xb6\x67\xe6\x9c\x39\x67\xc6\x20\x5a\xec\x4c\x75\x3a\x11\xd1\x82\x54\xd5\x89\x10\x61\xb4\xfd\x4d\x3d\x98\x92\x05\xec\x0d\x84\x16\x00\x19\xc5\xfe\x0c\x25\x43\xf8\x83\xbc\x0e\x81\xd1\xd6\x43\x53\x32\x1e\xc0\x5f\xc0\xf3\x80\x12\x75\xcd\x27\x40\x91\xf2\xd5\x89\x08\x3e\x53\x9e\x88\x78\x74\xaa\x4f\x2f\x44\x34\xce\x77\x54\xd6\xa8\x9d\x2d\x19\xaf\x9d\x02\x2b\x2f\x3c\x80\xf4\x75\xcb\x19\xed\x00\x5b\xa7\x4a\x76\xf7\xfd\xe7\x03\xa3\x56\x76\x50\xb2\x04\x49\x7c\x84\x08\x6d\xcf\x11\x17\x29\x33\x66\x2d\x7a\x8e\xe0\x7b\x46\x3d\x3c\x47\xed\x41\xd1\x8b\x34\x11\x4a\x36\x0c\xc5\x8f\x94\x19\x47\x46\x6b\x23\x43\x28\x67\xd8\x4c\x77\xae\x8e\x8c\xf1\xb1\xd3\xb8\x32\x76\x4e\x01\x5b\x79\xee\xa2\x31\xf4\x1e\x9e\x23\x04\x0c\x3b\x95\x81\x1a\x41\xbd\xa2\xed\x6d\xa6\x8f\xda\xc0\xc6\x20\x0d\x82\xb7\x12\xf5\x05\xa6\xd1\xf3\xe4\x75\x1e\x54\xeb\xa7\xe7\x30\xe8\x86\x16\x9f\x65\x48\x0a\xc2\x38\xa6\x18\x19\x06\x2f\xed\x13\xd0\xff\xce\x49\xd6\x4d\x49\x8b\x35\x4b\x92\x12\xa5\x2f\x0b\x7f\xca\x4f\xea\x08\x11\x72\x59\xd9\x30\x4c\xb0\xe2\x2b\xa0\x2c\x7e\xdd\x7f\x19\x47\x56\x1d\x62\x0f\x1a\x0d\x8c\xa3\xe0\x72\x81\xfe\x4f\x0f\xf9\x77\x11\x5b\xe7\xd7\x66\x5c\xe9\x4b\xf5\xb2\x6f\x88\x5d\x27\x7d\x7f\xe4\x7d\xef\x54\x9f\x68\x77\x40\x34\x4b\x7d\xed\xba\x0e\x2c\x86\xa5\xe1\xe6\xef\xc9\xbb\x78\x4e\x06\x67\x9a\xdb\xb9\xec\x53\x8a\xae\x6e\xb3\xea\x85\x65\xaa\x9f\x90\x2b\x60\xaf\x4d\x7f\x77\xb5\xbe\xe7\x8a\x17\x2c\xf8\xa4\x79\xf9\xd8\x9c\xde\x64\xa2\x5f\xc7\xe5\xa8\x5b\x67\x11\x2c\x1e\xac\x4e\x93\xda\x5b\x0f\x03\x58\xb5\x89\xca\xe8\x1a\x6d\x60\x47\x64\x2b\x9b\xfd\xec\xeb\xca\xbe\xf7\x45\x91\x43\xc7\x8c\x56\xe9\xa6\xd9\x51\x1f\x74\xd3\x1c\xd5\xe5\x7a\x04\x8f\xd3\x85\xf0\x4f\x0b\x4a\x7a\x13\xf9\xbe\xa3\xf4\x7f\xa7\x06\xfb\xcc\xf3\x91\xbf\x65\xf5\xe0\x75\x25\xcd\xec\x1e\x43\x99\x63\xf2\x62\xc8\xd7\x9e\x37\xe8\xb5\xed\x7c\x27\xd7\x23\xc8\x82\xd3\x41\x04\x13\x60\x2e\x48\x5d\xaa\x6f\x8e\x76\x12\xeb\x56\xdb\x27\x3a\x9d\x43\xbf\x5c\x0f\xb4\x71\xd1\xaa\x62\x6b\xb4\x93\x08\x3e\x5f\x84\x82\xcf\xb7\xee\xdf\x00\x00\x00\xff\xff\x72\xe5\x94\xce\x7d\x05\x00\x00")

func serverTemplatesPullsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesPullsHtml,
		"server/templates/pulls.html",
	)
}

func serverTemplatesPullsHtml() (*asset, error) {
	bytes, err := serverTemplatesPullsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/pulls.html", size: 1405, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesRecommendHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x41\x6f\xdb\x3a\x0c\x3e\xbb\xbf\x42\x30\x7a\x68\x0f\xb5\x5e\xda\x43\xd1\xc0\xf6\xc3\x7b\x1d\x8a\x15\xeb\x80\x02\x3b\xec\xac\xd8\x8c\x2d\x54\xb6\x02\x91\x71\x17\x18\xfe\xef\x83\x2c\xc5\x95\x9b\x04\xdb\xa5\x5b\x6e\x26\x45\xf2\xfb\x3e\x52\x54\xd2\x9a\x1a\x95\x9f\x45\x69\x0d\xa2\xcc\xcf\xa2\x28\x55\xb2\x7d\x61\x06\x54\x16\x23\xed\x14\x60\x0d\x40\x31\xa3\xdd\x06\xb2\x98\xe0\x07\xf1\x02\x31\x66\xb5\x81\x75\x16\x73\x04\xd3\x81\xe1\x48\x82\x64\xc1\xc7\x80\xc4\xfa\x6d\x46\xee\x53\xa6\x2b\x5d\xee\xf2\x33\x9b\xbb\x94\x1d\x2b\x94\x40\xcc\xd6\x52\x81\x2d\x17\xf5\xbd\x5c\xb3\xe4\xb3\xc0\x67\x61\xa0\xa5\x61\xb0\xc6\x28\x95\x4d\xc5\x6a\x90\x55\x4d\xd9\xe2\x96\xa1\x29\xb2\xb8\x26\xda\xe0\x92\x73\x23\x5e\x93\x4a\x52\xbd\x5d\x6d\x11\x4c\xa1\x5b\x82\x96\x92\x42\x37\xfc\x41\x1b\xfa\xef\x15\x50\x37\xc0\x1f\x74\x4b\x57\xfb\x8f\x46\x20\x59\x98\x5d\x85\xdc\x40\xb5\x55\xc2\xf0\xb5\x56\x25\x98\x04\xbb\x2a\xce\x53\x2e\x9b\x2a\x77\x95\xc5\x9e\x5b\xa1\x4b\x68\x45\xc7\x0d\x14\xba\x69\xa0\x2d\x79\xdf\x9f\x27\x0e\x66\xf2\xf8\x69\x18\xe2\x3c\x30\x3c\x0b\xaa\x87\x21\xe5\xc2\xb3\x02\x85\x70\x84\xcc\xf5\x62\x4e\x46\x74\x82\x84\xc1\x9b\x13\x8c\xb6\xfc\xf6\xe6\x7a\x71\xb7\xb8\x0b\x31\xf6\x3d\xb4\xe5\x98\x3b\xe5\xa5\xec\xde\x4b\x5b\x6c\x8d\x45\x14\xa8\xfb\x88\xf7\xba\x3c\x8a\xe6\x9f\x8f\x91\x56\x2a\xb8\x12\x8a\x0e\xc4\xed\xfb\xe4\xde\xa1\x73\x60\x4e\xcb\xf4\x41\xc0\x8e\xf7\x3c\x84\xc5\x4f\x29\x7c\x28\x65\xa0\xb9\x1d\x75\x30\xf9\x57\x8d\xc4\x50\x36\x52\x09\xc3\xac\x0a\xb8\xf4\x09\xe6\x5c\x0f\x23\xef\x1d\x25\x64\xa8\x0d\x41\xc9\x56\x3b\x26\x0a\x92\x9d\xa4\xdd\x2c\xc5\x08\xcb\xe2\xda\x2a\xdf\x60\x23\xda\x0a\xd8\xf9\x78\x6d\x97\x19\x4b\x9e\x64\xfb\x82\x7b\x49\x95\xf4\x65\xac\x1b\x1d\x5b\xc7\x64\x0c\x98\x4f\xc6\x9f\xb9\x76\xa7\x66\x63\x3e\x0c\x7f\x73\x05\x04\xed\xff\xf5\x42\x70\x32\xee\xb7\xc1\xf8\xf5\xb6\x0a\xd8\xc5\xc6\xe8\x95\x58\x49\x65\xfb\xc8\xa6\x03\x6f\xc6\x61\xb8\xdc\xf3\x7d\x9b\x89\x95\xd2\xc5\xd4\xad\xa0\xc7\xa3\xdd\x36\xd9\xa5\xf9\x7f\x3c\x36\x09\x16\x45\xe9\x66\x8a\x99\x6f\x84\x11\x2e\x81\x09\xdc\xbf\xcd\xeb\x5f\x25\x5b\xc8\xfa\xde\x55\x4f\x1e\xa4\x41\x7a\x92\x2d\x58\xc6\x41\xba\xc8\xda\x90\x1d\x3b\x77\x35\x19\x9f\xc4\xde\x16\x02\xf1\x3b\xd3\xff\x0e\x24\x73\xa1\x47\x35\x8b\xa6\x0b\x3a\xa3\x9d\x7f\x81\xdd\xab\x36\x25\x2e\xc3\x32\x5b\xe5\xe5\x78\xf1\xde\x19\xfc\x49\x64\xef\x1d\x65\x76\xa5\xf7\xd9\x66\xa8\xc7\xcb\x65\x5b\xee\xcf\x27\xdf\xb5\x29\x87\x81\x5d\x04\xa6\x6f\x85\x36\x30\x0c\x97\x29\x57\xf2\x5d\xb1\x60\xc0\x3c\x0d\x7f\xa1\x4f\xb3\xf2\xe8\x4b\xb9\x5e\xe7\x93\x2c\x7e\x6f\xd8\x71\x0b\x23\xe6\x05\x02\xdf\x04\x25\x5c\x71\xb6\xb4\x7d\xb0\xdd\x43\x9d\x72\xf7\x9f\xe0\x67\x00\x00\x00\xff\xff\xe8\xa3\xa2\x31\x1b\x08\x00\x00")

func serverTemplatesRecommendHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesRecommendHtml,
		"server/templates/recommend.html",
	)
}

func serverTemplatesRecommendHtml() (*asset, error) {
	bytes, err := serverTemplatesRecommendHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/recommend.html", size: 2075, mode: os.FileMode(420), modTime: time.Unix(1598996502, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesRelatedHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4f\x73\xdb\xb6\x13\xbd\xff\x3e\x05\x7e\xac\x67\x24\xcf\x44\x40\xdc\x64\x72\x50\x29\xb5\xa9\x13\xb7\x07\x35\xcd\xc4\xd3\x5e\x35\x10\xb0\x22\x21\x83\x00\x0b\x80\x92\x35\x1c\x7e\xf7\x0e\xf8\xcf\x94\x48\xc9\x72\x9a\x9c\x44\xee\x2e\xdf\x5b\xec\xee\x23\x57\x61\xec\x12\x39\xff\x1f\x42\x61\x0c\x94\xfb\x0b\x84\x42\x29\xd4\x03\x32\x20\x67\x81\x75\x7b\x09\x36\x06\x70\x01\x8a\x0d\xac\x67\x01\x21\x8c\x2b\xbc\xb1\x1c\xa4\xd8\x1a\xac\xc0\x11\x95\x26\x24\xa6\xec\x61\xb2\xd6\xca\xfd\xf2\x06\xbf\xc1\xaf\xc9\x2a\x13\x92\x93\x1d\xac\x4a\x0f\x66\xd6\x06\x67\xc1\xdd\x3e\x85\x59\xe0\xe0\xd1\x11\x1f\xdb\x90\x59\x30\x5b\x30\xc4\x3a\xea\x04\x23\x06\x24\x75\xc0\x9f\x47\xeb\xa4\xba\xb1\x98\x49\x9d\xf1\xb5\xa4\x06\x30\xd3\x09\xa1\x1b\xfa\x48\xa4\x58\x59\x12\x8b\x28\x96\x22\x8a\x1d\xde\x58\x72\xf3\x1a\xdf\xe0\x1b\x52\xc1\x10\x0e\x6b\x9a\x49\x87\x13\xa1\xba\x74\x96\x19\x91\x3a\x64\x0d\xfb\x4a\xf8\x27\x9b\x47\xde\xd8\x60\x1e\x92\x0a\xb4\x6c\x02\x69\xba\x10\xae\x34\xdf\xd7\xa4\x5c\x6c\x11\x93\xd4\xda\x59\xe0\xdd\x60\xea\x6c\x86\x5c\xcb\x25\xd3\xca\x81\x72\x6d\x0c\x42\xa1\x48\xa2\xe3\x28\xc1\xb4\x0a\xaa\x73\xc4\xce\xa5\x76\x4a\x88\xa1\x3b\x1c\x09\x17\x67\xab\xcc\x82\xa9\x61\xca\x23\xdd\x69\xe3\xde\xef\xc0\xea\x04\xc8\x9d\x56\x6e\xd2\xdc\x24\xd4\x3a\xdf\x9e\x6d\x64\x89\x81\x28\x93\xd4\x90\xb5\x90\x30\xa1\xd2\x61\xbb\x8d\xba\x49\x0c\xa4\xea\x84\x93\xd0\x89\x39\x8c\x62\x9a\x03\x6a\x42\xb9\x30\x07\x81\x08\xe5\xf9\x15\xfe\x4c\x8d\xcf\xf1\x33\x75\x71\x51\x74\x61\x08\x17\xdb\x8b\x70\x7d\xb6\x03\xc0\x77\x42\xc2\x39\xc4\x83\xdb\xce\x4d\xf7\xb2\x43\xe9\x59\xec\x60\xd7\x4a\x4f\xbf\x12\xf7\xb1\xde\x09\x15\xa1\x3c\x97\xa0\x10\x5e\x08\xf5\x60\x8b\x02\xa5\xda\xf7\x44\x50\x29\xf7\xa8\x16\x03\x2a\x11\xfa\x99\xf8\x73\x18\xaa\x22\x40\x57\xa5\x46\xa6\xb3\x16\x66\xb0\x27\xbd\x42\x1c\x3b\x97\xcb\xa3\xe1\x3b\x51\xd9\x92\xad\x7a\x40\xd1\xe4\xb8\xb8\x43\xb8\x3e\x6c\xb9\x4c\xa9\x8b\x03\xa4\xd5\xad\x14\xec\x61\x16\xec\x84\xe2\x7a\x87\xa5\x66\xd4\x09\xad\x66\x23\x3f\xa6\x53\x42\xbc\x41\xc6\xda\xba\xe9\xdb\x77\xef\x7e\x7c\x4b\x3c\xa7\xa2\xdb\xe6\xdd\x40\xf2\x3c\x33\xf2\x9f\x0c\xcc\xbe\x3a\x38\xbe\xcb\xa4\xac\x06\x64\x14\xcc\xf3\xbc\x32\x56\x86\xde\x98\x9c\xcb\x8f\x32\x9f\x87\xed\x9d\xa7\xd6\xd7\x71\xe2\x3a\x05\x35\x1e\x35\x7c\xbf\x09\xf7\x7b\xb6\xfa\xeb\xcb\xa2\x28\x46\xaf\xd0\x68\xb9\x92\x54\x3d\x8c\xae\x83\x86\xe8\xa8\x68\x2d\xdb\xa0\x50\xad\x48\x52\x09\xde\x61\xb1\x36\x11\x29\xaf\x48\x25\xdd\x23\xd5\xbd\x20\xc5\xbf\xef\x6f\x35\x87\xef\x9a\xe2\x56\xd8\x8c\x4a\xeb\x32\x2e\xb4\xef\xdb\xa9\x64\xff\x3f\x99\x1c\xbc\xb4\xbe\x01\xb5\x50\x0e\xa4\x14\x1b\xc1\x81\x56\xb4\x68\x32\xe9\xb5\xbe\x3f\x0f\x43\xa6\xde\x80\x58\xa6\x4d\x7f\xd0\x9b\xc2\xde\x7b\xef\x07\x61\x53\x49\xf7\x45\x81\x12\xea\x58\x7c\x9e\xa3\x67\x68\xa5\xbc\x92\x9a\x95\x5a\xae\xa0\x7f\xf5\xb7\xf6\xe0\x45\x35\x94\x5f\xf9\xd4\x05\x42\x2c\xe3\xda\x2f\xc8\xe0\xa8\x9f\x7a\xe6\xb4\x3a\x9e\x7f\xe8\x54\x01\xdb\x32\x96\xe1\x47\x75\x1c\xe2\x19\x92\x33\x7a\xb1\x40\x7f\x58\xb4\x94\x77\xc2\x58\xb7\x10\x0a\x8a\x62\xf2\x64\x5d\xd0\xc6\xf8\x9c\x50\x8e\xcf\xf9\x6d\xc4\xfc\x52\x39\x4f\x87\xce\x33\xbd\xf9\x6e\xc9\x5f\x28\xf3\xf3\x42\xff\x6a\xf6\x8b\x94\x7e\x72\x58\x4e\xce\xaa\x14\x0a\x4e\x8c\x77\x6a\x60\xfe\x34\x1c\x3e\xce\x7f\x5a\xbc\xf5\x3f\xb3\x5a\x9d\x19\x36\xac\x8c\x43\xda\xdb\x4a\xb3\x2f\x23\xbe\xe4\x7d\x97\xe7\xa0\x78\x77\x67\x38\x5c\x31\xba\xce\xee\x29\x92\x43\x41\x87\xb4\xdb\xe2\x76\x41\xef\x7f\xbc\xaf\xf0\x17\xba\xab\xbe\xce\x3f\xab\x2c\x99\x79\xcb\x27\x78\x74\x9f\xb2\xa4\x28\x82\xb9\xdf\x8b\x90\xc7\xae\xd6\x9e\x90\xd0\x73\x4b\x58\x48\x9a\x2d\x3a\x7c\xda\xb1\x11\xe2\x9a\x65\x89\xdf\x1b\x29\xe7\x1f\xb7\xa0\xdc\x42\x58\x07\x0a\xcc\x78\xf4\xe1\xcf\x3f\xea\x4a\x2e\x34\xe5\xc0\x47\xaf\xd0\x18\x7c\xc8\x35\x9a\xcd\x51\x5e\x73\xb5\x00\xe5\x9e\x71\x0f\x12\x98\xd3\xe6\xbd\x94\xe3\x11\x1e\x68\x1f\x4a\x0d\x8c\xae\xf1\x5a\x9b\x8f\x94\xc5\xe3\x71\xe9\x3c\x00\x44\x28\x96\x1b\x8b\xdb\x3f\x07\xe5\x7b\xbd\x8e\xfb\xa9\x8e\x29\xea\xab\xea\xf7\xe9\x5f\x43\x48\xaa\xbf\x70\xff\x06\x00\x00\xff\xff\x37\x94\x5e\x5a\xca\x0d\x00\x00")

func serverTemplatesRelatedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesRelatedHtml,
		"server/templates/related.html",
	)
}

func serverTemplatesRelatedHtml() (*asset, error) {
	bytes, err := serverTemplatesRelatedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/related.html", size: 3530, mode: os.FileMode(420), modTime: time.Unix(1598304135, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesSearchHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xd0\x41\x8e\xe3\x20\x10\x05\xd0\xb5\x73\x0a\x54\x07\x70\x29\x93\xc5\x28\x23\xf0\x15\x66\x46\xdd\x17\x20\x50\x09\xa8\x31\x38\x54\x61\xb5\x15\xe5\xee\x2d\xdb\xc9\xfa\xeb\x3f\xa8\xaf\x83\x8c\x69\x38\x74\x3a\x90\xf5\xc3\xa1\xeb\x74\x8a\xf9\x4b\x55\x4a\x06\x58\x96\x44\x1c\x88\x04\x94\x2c\x13\x19\x10\xfa\x16\x74\xcc\xa0\x42\xa5\xab\x01\x64\xaa\x33\x55\x64\xb1\x12\x1d\x6e\x85\x7e\xcd\x57\x11\x5f\xa4\xbe\x14\xbf\x6c\xb4\x8f\xb3\x72\xc9\x32\x1b\x9e\xac\xa3\x41\xa3\x8f\xf3\x96\x5c\x4b\x1d\x95\x75\x12\x4b\x36\x80\xae\x78\xca\x76\x46\x26\x5b\x5d\x40\x50\x23\x49\x28\xde\xc0\xbf\xbf\x1f\x9f\xa0\xb2\x1d\xc9\xc0\x5a\x81\x17\xe7\x28\x0b\xd5\x55\xea\x74\x1c\x6f\x8a\xab\x33\x10\x44\x26\xfe\x83\x68\x67\x2b\xb6\xf2\xa9\xbf\x45\x09\xed\xd2\x98\xaa\x2b\x59\x28\x4b\xef\xca\x88\x0d\x7f\x9f\x7e\x1d\xcf\xc7\xf3\x1b\x4b\xe5\x56\x76\x6a\x1a\x74\xcc\x53\x93\xd7\xf5\xfb\x77\xde\xef\xdf\x1b\xd5\x05\x54\xa5\x7b\x8b\x95\xbc\x9a\x6d\x6a\x64\xe0\xf1\xe8\xff\xaf\xc9\xf3\xf9\xf6\xf6\xda\x76\x26\xae\x9f\xde\xb6\xd9\x37\xd1\xb8\xcf\xff\x13\x00\x00\xff\xff\x60\xf9\x72\x62\x86\x01\x00\x00")

func serverTemplatesSearchHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesSearchHtml,
		"server/templates/search.html",
	)
}

func serverTemplatesSearchHtml() (*asset, error) {
	bytes, err := serverTemplatesSearchHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/search.html", size: 390, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesValidateBlocksHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x41\x6b\xe3\x30\x10\x85\xcf\xce\xaf\x30\x66\xcf\x16\xbd\x16\x59\xb0\xbb\x4d\x69\xa0\x5b\x42\xb6\xf4\x2e\xdb\x93\x7a\xe8\xc4\x0e\xd2\xc4\x6c\x10\xfa\xef\x8b\x2c\x27\x31\xe9\x3a\x87\x3d\xf7\x92\xd8\x6f\xe6\x7d\x1a\xcf\x03\xc9\x86\x77\xa4\x16\x89\x6c\x40\xd7\x6a\x91\x24\x92\xb0\xfd\x48\x0d\x50\x91\x59\x3e\x12\xd8\x06\x80\xb3\x94\x8f\x7b\x28\x32\x86\x3f\x2c\x2a\x6b\xb3\xb4\x31\xb0\x2d\x32\x61\xc1\xf4\x60\x84\x65\xcd\x58\x89\xc1\x90\x87\x7a\x20\x8a\x11\x29\xcb\xae\x3e\xaa\x45\x60\xef\x95\x73\xf9\xea\xc1\xfb\xf3\xcb\x5a\x73\xe3\xfd\x50\x64\x5d\x12\x84\x11\x12\xc9\x66\xf8\x4f\x24\xd7\xea\x07\x75\xd5\x47\xfa\x78\x77\x16\x9c\xcb\x7f\xb3\x66\x9b\x3f\xde\x0d\xa0\x7f\xb5\xaf\x0d\x54\x68\xb1\x6b\x3f\xbb\xce\xa5\x59\xf3\x06\x2a\x4d\xf4\xd9\x19\xf5\x38\xbc\x18\xa7\x0d\xcf\x35\xf6\x69\x45\xda\xda\xa2\xea\x76\x7b\x6d\xc6\x8f\xb8\xc8\x04\x5b\x1e\x0f\xd9\x8f\x52\xd8\x0d\x18\xb5\x59\xbe\x6e\x56\xcb\xb7\xe5\xc3\x50\x4d\x9c\x33\xba\x7d\x87\xf4\x5b\x39\x0c\x72\x5f\xa4\xf9\x06\xd8\x20\xf4\x50\xc7\x71\x03\xe3\x40\x27\x2e\xb6\x60\xd5\x28\x5f\xcc\x41\x0e\xde\x48\xc9\x9f\x43\xd7\xd9\x1d\xfa\x70\x1b\x9b\xf2\x95\x7d\x42\x9e\x94\x42\xfa\x13\xf6\x13\xb2\x72\x2e\xb6\xbe\x1c\x76\x25\x18\xef\xd3\x93\xf0\xb3\x6b\x19\x5a\xf6\x5e\x0a\x42\x35\xa1\x03\x59\x98\x67\xfe\x42\x6b\xff\x07\xda\x5e\x16\x70\xfd\x3a\xd9\xf4\xf0\xc5\x6b\xd3\x95\x2a\xfc\xe8\x12\x09\xf9\x78\x1f\xf0\x71\x17\x13\x35\x9c\x51\x63\x7f\x3a\x44\x8a\x03\xa9\xc5\x35\x7e\x6c\xb9\xca\xd3\xe0\x7b\x33\x1b\xe8\xf3\xf2\xed\xfb\xcb\xeb\x8d\x3c\x09\x7a\xdd\xf2\x57\x9c\x33\x71\xde\x0c\x62\x92\x88\x14\xf1\x5e\x91\x22\x5e\x61\x7f\x03\x00\x00\xff\xff\x63\x10\xa5\x47\xca\x04\x00\x00")

func serverTemplatesValidateBlocksHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesValidateBlocksHtml,
		"server/templates/validate-blocks.html",
	)
}

func serverTemplatesValidateBlocksHtml() (*asset, error) {
	bytes, err := serverTemplatesValidateBlocksHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/validate-blocks.html", size: 1226, mode: os.FileMode(420), modTime: time.Unix(1594671898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesValidateFilesHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x55\xc1\xaa\xdb\x3a\x10\x5d\x3b\x5f\x21\xcc\x5b\xbe\x5a\xdc\x6d\x90\xbd\xb8\xb4\xa1\x85\x52\x42\xfa\x01\x45\xb6\x26\xb1\x88\x6c\x07\xcd\x24\x34\x08\x2f\xfb\x0f\xfd\xbe\x7e\x49\x91\xa5\x38\x4e\x7c\x73\x4b\x29\x5d\x74\x95\xf8\xcc\xcc\x99\x99\x73\x24\x5b\xd4\xd4\x98\x62\x91\x88\x1a\xa4\x2a\x16\x49\x22\x48\x93\x81\xc2\xb9\xec\xd3\xb1\x29\xc1\xf6\xbd\xe0\x01\xf2\x41\xa3\xdb\x3d\xb3\x60\xf2\x14\xe9\x6c\x00\x6b\x00\x4a\x19\x9d\x0f\x90\xa7\x04\x5f\x89\x57\x88\x29\xab\x2d\x6c\xf3\x94\x23\xd8\x13\x58\x8e\x24\x49\x57\x7c\x28\xc8\x7c\xdc\xb7\xe3\xb1\x9f\x28\x3b\x75\x2e\x16\x9e\xfb\xc0\x2a\x23\x11\x73\x1f\x01\xeb\xdb\x25\x42\x46\xae\x9a\xe8\x80\x4b\xce\x77\x9a\xea\x63\x99\x55\x5d\xc3\xf7\x9a\xa0\xea\x2e\x3f\x87\xa3\x31\x7c\x32\x74\xca\x48\xda\x1d\x50\x9e\x7e\x29\x8d\x6c\xf7\xe9\xed\x46\x32\xac\x2a\xcb\xb0\x57\x22\x28\x34\x4c\x04\xa9\x62\xa5\x0d\xb0\xd5\xd3\xf8\xec\x5c\xf6\x99\x24\x61\xb6\x7a\xea\xfb\x97\xb3\xd7\x16\x2a\x8d\xba\x6b\xe7\x45\x63\xe8\x51\xed\x06\x2a\x69\xcc\xbc\x30\xe0\x43\x95\xe0\x71\xd4\x41\xa7\xe2\x9d\xd2\x04\x8a\x6d\xb5\x01\x5c\x7a\xe8\x68\x06\x4e\xe7\xac\x6c\x77\xc0\xfe\x2b\x25\x02\x5b\xe6\x2c\x7b\x96\x08\x18\x1b\x1b\x1d\x05\x86\xa1\xbc\x70\x6e\xc8\xcb\xd6\x92\xea\x90\xe2\x1c\xb4\x2a\x36\xf4\x94\x8b\xd7\x29\xef\x1d\xf3\x91\x25\xbb\xa5\xfd\x9f\x7d\xd4\xed\x04\xf5\x4f\xa1\xf8\x5f\x15\x7f\x03\x55\xd7\x34\xd0\x2a\x50\xcb\x57\xf6\x98\xff\x59\xdb\xae\x94\xa5\x36\x9a\xce\x23\xf6\x6c\xba\x6a\x1f\xd7\x1d\xa5\xb6\x40\x56\xc3\x09\x94\xd7\x3b\xc8\xb6\xb9\x40\x61\x8f\xc4\x39\xbd\x9d\x24\x66\x1f\xf0\xbd\xa6\x18\x13\x64\x2f\xbe\x68\x2a\x62\x3a\x18\x84\x59\xbc\xd1\x88\x63\x42\x7b\xe1\x8e\x42\xbc\xd8\xe0\xc7\xf7\x6f\xb3\xd4\xf1\x92\xf2\xaa\x53\xd0\xca\x13\x3f\x49\xa3\x95\x24\x78\x53\xfa\xf5\x90\x3b\x37\x65\x7a\xdb\xf7\xfe\x36\x4e\xa0\x70\x54\xe2\xad\x1c\x07\x98\x26\x5c\xa5\xbb\x1d\x72\x92\x73\x7b\x4a\xa6\x47\xf9\xce\x3e\x03\x27\xd9\xd2\xef\x79\xf7\xc0\xa7\x40\x35\xb5\x29\x20\x77\x2e\x05\xf0\xef\x99\x74\xcb\xff\x07\x1e\x5d\x88\xae\x16\x45\xe4\xa1\x43\x31\xfe\x4b\xf1\xaf\xa0\x7f\xf9\x87\x97\xbe\xe0\xe1\xe3\xf3\x33\x00\x00\xff\xff\x17\x80\x8e\x10\x84\x06\x00\x00")

func serverTemplatesValidateFilesHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesValidateFilesHtml,
		"server/templates/validate-files.html",
	)
}

func serverTemplatesValidateFilesHtml() (*asset, error) {
	bytes, err := serverTemplatesValidateFilesHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/validate-files.html", size: 1668, mode: os.FileMode(420), modTime: time.Unix(1598996302, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverTemplatesValidateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\x41\x6e\xac\x30\x0c\x86\xd7\x70\x8a\x28\x7a\xdb\x47\xc4\x76\x64\xb2\x2b\xbb\x8e\x2a\xf5\x04\x86\x78\x0a\xaa\x61\x50\x62\x50\x51\xc4\xdd\xab\xc0\x4c\xdb\x69\x57\xb1\xfd\xcb\x9f\x9d\xdf\xd0\xc9\xc0\x36\xcf\xa0\x23\x74\x36\xcf\x32\xe0\x7e\x7c\x57\x9e\xb8\xd2\x41\x56\xa6\xd0\x11\x89\x56\xb2\x4e\x54\x69\xa1\x0f\x31\x6d\x08\x5a\x75\x9e\x2e\x95\x36\x81\xfc\x42\xde\x04\x41\xe9\x5b\xb3\x37\x14\x49\x4f\x44\x73\x43\x42\x73\x75\xab\xcd\x13\x5b\xb0\x61\x4a\x53\x32\x10\xbf\xbf\x19\x88\xb3\x2f\x33\xf3\x57\x52\xf7\x4c\xaa\x2e\x1f\xf2\xa0\x9e\x5c\x2f\xe4\x52\x31\x46\x8f\xe3\x1b\xa9\x7f\xd3\xcc\xac\x4e\x95\x2a\x52\x7b\xd8\xb6\x3f\x58\xc0\xfb\x9a\xed\xd5\xd1\x88\x8b\x59\x90\x7b\x87\x42\xff\x2f\x09\x6a\x62\xdc\x21\xc5\x79\x1e\x1a\xf2\xdb\xa6\xed\xef\x0a\x18\xfc\xe6\xdd\xc5\x57\x41\x09\x45\x5d\x1e\x23\x1f\xa4\xf3\x3c\xec\xfb\x1e\x52\x8c\x34\xba\x3d\x04\x73\xfb\x7a\x8a\x27\xfb\x4c\x38\xaa\xba\x3c\xa9\x18\x7f\xd2\x92\x69\x87\x59\x60\x8e\xbb\x7c\x06\x00\x00\xff\xff\x63\xbe\x2e\x9c\x9f\x01\x00\x00")

func serverTemplatesValidateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_serverTemplatesValidateHtml,
		"server/templates/validate.html",
	)
}

func serverTemplatesValidateHtml() (*asset, error) {
	bytes, err := serverTemplatesValidateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/templates/validate.html", size: 415, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverStaticOopsCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x4e\x84\x30\x14\x85\xf7\x3c\xc5\xd9\x4c\xa2\xa6\x4c\xa0\x93\x61\x14\x57\xa3\xd1\xe8\xc2\x15\xf1\x01\x0a\x5c\x4a\x9d\xfe\x90\x16\x8d\x68\x7c\x77\x43\x1d\x47\xcd\xb8\xeb\xc9\xe9\xf7\xb5\xf7\x9e\xe1\x3d\x01\x8c\xf0\x52\xd9\x12\xd9\x65\x02\x0c\xa2\x6d\x95\x95\x31\x7d\x24\x49\xed\xda\x29\x5e\xaa\x45\xb3\x93\xde\x3d\xdb\xb6\x44\x1f\xf4\x09\xcf\x56\x0c\xab\x62\xc1\x70\xb1\x5e\x9c\xce\x64\xe3\xb4\xf3\xfb\x32\x2f\x18\x36\x9b\x05\x03\xdf\x97\x9d\xb3\x63\xda\x09\xa3\xf4\x54\x22\x15\xc3\xa0\x29\x0d\x53\x18\xc9\x30\x5c\x69\x65\x77\x0f\xa2\xa9\x62\xbe\x75\x76\x64\xa8\x48\x3a\xc2\xe3\x3d\xc3\x1d\xe9\x17\x1a\x55\x23\x18\xb6\x5e\x09\xcd\x10\x84\x0d\x69\x20\xaf\x3a\x86\xed\x6c\xc2\xf5\xfc\x34\x6e\x8c\x7b\x52\x3f\xe8\x51\xae\x26\x53\x3b\x7d\xf8\x4d\x50\x6f\x54\x22\x2f\x86\xd7\x38\xe9\xb2\x27\xd1\x92\x8f\xc3\xfe\xee\x97\x6b\x4f\xe6\xcf\x66\xb8\x27\x83\x0c\xf9\x92\xaf\xe3\x29\xe2\xca\xc8\x88\xf6\xa4\x64\x3f\x96\x58\x9d\x67\xdf\x62\xf2\xde\xfd\xe3\xe5\x47\xe2\xfc\x4b\xcc\x0f\xd6\xcf\x00\x00\x00\xff\xff\xe7\x34\x59\x8c\xa0\x01\x00\x00")

func serverStaticOopsCssBytes() ([]byte, error) {
	return bindataRead(
		_serverStaticOopsCss,
		"server/static/oops.css",
	)
}

func serverStaticOopsCss() (*asset, error) {
	bytes, err := serverStaticOopsCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/static/oops.css", size: 416, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverStaticRelatedCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x3d\x8f\xe3\x36\x10\xed\xf7\x57\x4c\x63\xc0\x0e\x44\x41\x92\xbf\xb5\xd5\x25\x48\x70\x29\x52\x2d\x52\x1b\x94\x34\x96\x79\xa6\x48\x81\xa4\xd7\xeb\x04\xf9\xef\x01\xa9\x2f\x4a\xb6\xf7\xae\xba\x66\xbd\x26\x87\x33\x8f\x6f\xde\x3c\xf3\x17\xf8\xf7\x05\xa0\xa2\xaa\x64\x22\x85\xe8\xf5\x05\xa0\xa6\x45\xc1\x44\xe9\xbe\xfd\xf7\xf2\x92\xc9\xe2\xe6\x82\x32\x9a\x9f\x4b\x25\x2f\xa2\x48\xe1\xa4\xf9\x3c\x89\x96\x01\x2c\x37\xb3\x00\xf6\xeb\xd9\xc2\x9e\xcc\x25\x97\xaa\xdd\x8c\x37\x01\x6c\xb7\xb3\x00\x92\x76\xf3\x28\x85\x21\x47\x5a\x31\x7e\x4b\x81\xd0\xba\xe6\x48\xf4\x4d\x1b\xac\x02\xf8\x95\x33\x71\xfe\x8b\xe6\x6f\xee\xfb\x1f\x52\x98\x00\xde\xb0\x94\x08\x7f\xff\x19\xc0\x57\xe4\xef\x68\x58\x4e\x03\xf8\xa2\x18\xe5\x01\x68\x2a\x34\xd1\xa8\xd8\x31\x80\x2f\x36\x13\xfc\x66\x4b\xc3\xef\x95\xfc\xc6\x86\xa3\x77\xdf\xdf\x6e\x55\x26\x79\x8f\x46\xb3\x7f\x30\x85\x78\x53\x7f\xb8\x9b\xd6\x0a\x03\x08\x73\x59\xa0\xbb\xef\x08\xf0\x57\x9a\x9f\x03\xa8\xa4\x90\xba\xa6\x39\x7e\x92\x62\x38\xdb\xec\x45\xe1\x4e\x61\x65\x0f\x70\x26\x90\x9c\x90\x95\x27\x93\x42\x1c\x2e\x97\xaf\x8e\xfa\x0f\x72\x65\x85\x39\xa5\x10\x47\xd1\xcc\x2e\xc9\x77\x54\x47\x2e\xaf\xe4\x23\x05\x9d\x2b\xc9\x1d\x62\x52\x69\xd2\xef\x68\x73\xe3\x98\x82\x90\xc2\x41\x69\xa2\x32\xaa\xba\x54\xcd\x46\x03\x28\x4d\xc9\x15\xb3\x33\x33\xa4\x0f\x73\x18\x0b\xa6\x6b\x4e\x6f\x5e\x70\x68\xdb\xe0\xf6\xfc\x4e\x46\x51\xe0\xa0\x05\xb0\x4a\x6c\x2b\xbb\xc0\xf4\x64\xe1\x34\xe1\x17\xa5\x6d\x7c\x2d\x99\x30\xa8\x5c\x0c\x75\x3b\x06\x3f\x0c\x29\x30\x97\x8a\x1a\x26\x85\x57\x8c\x55\xe5\x50\xef\xc8\xb8\x41\x95\x02\x13\xef\xa8\xcc\x7c\xb9\x9b\x2d\x40\x63\xcd\xe8\x7c\xb7\xb6\xff\x52\x73\x51\xd4\xe0\x7c\x97\x6c\x66\x0b\x38\x5d\x90\x28\x69\xec\x42\xbc\x59\x15\x58\x2e\x20\x53\x96\x56\x81\x5a\xcf\xf7\xdb\xd9\x02\x72\x29\x8c\xa2\xda\xcc\xe3\x68\xdf\x81\x3e\x21\x2d\x5a\xc0\xbe\x96\x6d\x5b\xa8\x22\xa5\xa2\x05\x43\x61\xe6\x46\x42\x26\x8d\x91\x55\x30\x28\xb9\xb9\x7f\xb2\x9f\x2d\xbc\xc5\xad\xd5\xfe\x72\x3f\x5b\x8c\xf2\x1f\x0e\xb6\x36\x0a\xe3\x0a\x51\xce\x4a\x41\x98\xc1\x4a\xa7\x90\x63\xc3\xce\x84\xdf\x6e\x8c\x76\xdb\x66\x52\xfa\xc6\x1c\x39\x7e\xbc\xfa\xe3\x09\xf4\x62\xe4\x68\x46\xe3\x70\xad\xb0\x82\xb8\x95\x58\xdb\xfe\xed\x66\xd7\x0a\xb2\x07\xc5\x72\x29\x1e\x51\xbd\x5f\xf5\x54\x6f\x7c\xa6\xd7\xf1\x6a\xc2\xf4\x36\xba\x63\x3a\x19\x33\x1d\x35\xf8\x07\x89\xaf\x5b\x58\xcd\x05\x88\x6a\xd7\xdd\xaa\x0f\xae\x60\x6a\x3a\x36\x71\x78\x1f\x76\x64\xfc\x6e\xbc\xe2\x70\xd5\xc7\xd9\x7d\x3d\x36\xb4\x9e\xb1\x7b\x66\x5c\xf4\xe1\x60\x98\x79\x94\xb5\x63\xd4\x2d\x5e\xdb\x1b\x6d\xa2\xb1\x43\xda\x20\x88\x20\x6a\x9a\x10\x0d\x79\x5d\xbe\x69\x93\xbc\xfd\xc3\x41\xd0\x0a\x3f\x53\xc8\x44\x04\xe3\x83\x87\x43\x4d\xcd\xa9\xbd\x69\xef\x1f\xfb\xc6\x3e\xae\x52\x15\x24\x53\x48\xcf\x29\xb8\x0f\x42\xad\x83\x4c\x33\xd0\xdc\x0e\xa4\x4f\x17\xe1\x78\xec\xdb\xe3\x21\x60\xc2\x39\x57\xc6\x65\x7e\x7e\x9a\xc7\x53\x98\x6f\x71\x63\x5d\xf6\x2b\x43\x12\x6f\x28\x7f\x8c\x09\x80\x6f\x17\x6d\xd8\xf1\x46\xda\x39\x4b\xc1\x59\x32\xc9\xd0\x5c\x11\x85\x9f\x5c\xe7\xb2\x35\xe4\x61\xe0\xa8\xf7\xdb\x14\xdb\x3f\x51\xb8\xd9\x2e\x5e\xa7\xa6\xbd\xf7\xfb\xdf\xda\x2d\x33\x94\xb3\xfc\xb5\xb3\x35\x87\x37\x05\xa7\x6a\xbf\xaa\x23\xca\xe7\xd5\xc8\x3a\x6d\x45\x32\x0d\xeb\xdd\x42\xdf\x53\xa0\x8d\x42\x93\x9f\x1e\x72\x70\x27\xc1\xb1\xba\xda\xdc\x7e\x8f\x7f\x94\x5d\xfb\x49\x0a\xa6\x30\x6f\x0c\x3b\x97\xfc\x52\x89\xf1\xc3\xa0\xb3\x9c\x5e\xfb\xcf\x6b\xff\xa4\x26\x0c\x17\x6a\xa5\x96\x7c\x17\xd7\x03\xbd\x26\x13\xc3\xf2\x1a\x37\x52\x71\xf2\x24\xb7\x9d\x13\x1d\x4c\x16\xb5\xbc\xa8\x7c\xe2\x08\x9d\x63\x84\xdb\xcf\x32\x3d\x7a\x76\x3d\x62\xce\x7f\x7c\xa9\x32\xb3\x21\xeb\x00\x92\x64\x19\x40\xb2\x8c\x6d\xc8\x7e\xe1\xe1\x5f\x85\x6b\xab\xaa\xbb\x9a\x1e\x50\xbf\xa8\x2a\xb3\x71\xc2\xe7\x6f\xbd\xb8\xfd\x05\x73\x1a\xca\xa8\x66\x7a\x78\xd5\x54\x4c\x74\x46\xf5\x48\xaa\x6d\xf1\xee\x01\xf5\x7d\x00\x93\x67\x6a\x58\x75\x2a\x9b\x8e\xc6\xb2\xf5\xde\x27\x53\xfb\x7f\x00\x00\x00\xff\xff\x8e\x50\x9c\xbe\x02\x0b\x00\x00")

func serverStaticRelatedCssBytes() ([]byte, error) {
	return bindataRead(
		_serverStaticRelatedCss,
		"server/static/related.css",
	)
}

func serverStaticRelatedCss() (*asset, error) {
	bytes, err := serverStaticRelatedCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/static/related.css", size: 2818, mode: os.FileMode(420), modTime: time.Unix(1595437194, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serverStaticStyleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x5d\x8e\x9b\x3c\x14\x7d\x1e\x56\x61\x69\xf4\x69\xbe\x4a\x01\x91\xcc\x44\x69\x9d\x0d\xf4\xa5\x52\xb7\xe0\xe0\x0b\x5c\xc5\xd8\xc8\x36\x93\xa1\xd5\x3c\x76\x0f\x5d\x5f\x57\x52\x19\x9b\xc4\x10\x18\xf5\x29\x8a\xef\xff\xb9\xe7\x1e\x4e\x8a\xf7\xe4\x67\xf2\x50\x2a\x69\xd3\x92\x35\x28\x7a\x4a\x0c\x93\x26\x35\xa0\xb1\x3c\x06\x8b\xc1\x1f\x40\xc9\x16\x9a\x63\xf2\xd0\x32\xce\x51\x56\xa9\x80\xd2\x52\xb2\xcd\xf3\xf6\x2d\x7a\xd5\x58\xd5\xd1\xf3\x89\x15\xe7\x4a\xab\x4e\x72\x4a\x1e\xcb\xb2\x3c\x26\xef\x49\xc2\xa8\x40\x79\x76\x65\x0b\x25\x94\xa6\xe4\x71\xf7\xf2\x25\x58\x5e\xd1\xa0\x05\xbe\x64\xb4\xc3\xeb\xac\xfc\xa4\xa5\xb1\xb8\x7b\x7c\x4f\x92\xac\x46\xbb\x21\x99\x40\x09\x5f\xd1\x5e\xc7\xbc\x80\x77\x3b\x29\xc1\x8f\xc9\x83\x40\x63\x53\x63\x7b\x01\x94\x3c\xfd\xf9\xfd\xeb\xc9\xc7\x36\x68\x4c\x08\xfe\x86\xc6\xb8\xe8\xd8\x53\x2a\x09\xde\x31\xa4\x9f\xf9\x5e\x6a\xb4\x90\x9a\x96\x15\x40\x49\xab\xe1\x38\xc3\xb8\x51\x52\x0d\xd6\x29\xc4\x79\xf6\x79\x6c\x1e\xb8\x03\x62\x43\xc2\x14\x51\x3f\xf7\xd5\x3e\x02\xc5\xaa\x96\x92\xe7\xc9\x92\x4e\xca\x5a\xd5\x84\x57\x57\xab\x00\x69\x41\xbb\x4c\x16\xde\x6c\xca\x04\x56\x92\x12\xff\xea\x3d\x0c\x30\x5d\xd4\xce\xa3\x0e\xf0\xbd\xf8\x0d\x5f\x90\xdb\x9a\x92\x43\x58\x78\x4c\x97\x6c\x1f\x37\x42\xc9\x2e\x70\x42\x69\x0e\x3a\x0d\x81\xdb\x6c\x1f\xbf\x6a\xc6\xb1\x33\xa3\xaf\xaf\x2c\xa0\xf0\x48\x30\x61\x41\x4b\x66\xf1\x15\xae\xdb\xfc\x88\x9a\xcb\xcc\x5c\x68\xe2\x03\xb2\xae\xd4\xa7\xb5\x7a\xf5\x88\x8d\x34\xcd\xf3\xfc\x18\xf0\xe3\x50\x28\xcd\x2c\x2a\x49\x49\x27\x39\x68\xb7\x2b\x9f\x6d\x36\xc2\x18\x7c\x38\x1c\xbc\xbd\xed\x84\xd8\x90\xac\x44\x01\x1b\x92\x15\x9d\xd6\x20\x6d\xbc\xe2\x61\x9d\x33\x68\xef\x17\x7a\x12\xaa\x38\x7f\xd7\xea\x74\xc3\xc9\xf3\x16\x2d\x13\x58\x2c\x92\x6e\xb2\xfb\x01\xad\x39\x8b\xd6\xaf\x6d\xbd\x13\x37\xd0\x7c\x59\xd9\xee\x7a\xa1\xc0\xb8\x87\x71\x4a\xd7\xf5\x9c\x2b\x89\x1c\xc2\xee\x3e\x38\x96\xe5\x86\x64\xa0\xb5\xd2\x37\x1c\x9d\xde\x98\x3b\x9d\x5b\xb9\xc1\x28\x6b\x84\xff\xbf\x45\xbe\x44\xfd\x9c\x27\xa7\x39\x0e\x11\xf8\x77\xd3\x92\xd4\xf6\xed\x44\x50\xce\xd0\x5f\x94\xe6\x33\xc9\x09\x6e\x1c\x4d\x11\x78\xd9\x35\x0d\xd3\x7d\x98\x79\x45\x73\x1c\x2c\xe9\x78\xb1\xbb\xc9\x41\x44\x3a\x39\x4d\x15\xb4\x65\xa8\x3f\x39\x09\x00\xb8\x1d\xfc\x36\xcf\xff\x0b\x20\xa9\xa6\x01\x69\x1d\xfa\x03\xed\x16\x14\x69\xbf\x44\x9c\xfd\x15\x65\x9f\x20\x0a\x8b\xa5\xc9\x1b\x3d\x49\x16\x99\x3c\xa5\x68\xbe\xae\x74\xb3\xa6\x9e\x97\xe4\xe1\x5a\xd7\x41\x20\xbb\xe6\x34\x61\x27\x25\x5e\xac\x96\x2e\x65\x94\x92\x2b\xa8\x6e\x0f\xb1\x60\x86\x6f\xe2\x90\x5c\x55\x6a\xc5\x54\xa8\xa6\x65\x7a\x08\xe4\x68\x5a\xc1\x7a\x4a\x2a\x8d\xee\x4b\xe5\x7e\x52\x0b\x4d\x2b\x98\x85\xb4\x50\xa2\x6b\xa4\xa1\x44\x43\x0b\xcc\xfe\xbf\xdb\x90\x6d\xa9\x3f\x8d\x7e\x15\x6b\x23\x88\xdd\xc4\x2e\xe5\x60\xf2\x91\x94\x6c\x37\xe1\x41\xab\xcb\xf0\xcf\x79\x0e\xe3\xdc\xb9\xee\xee\x5d\xff\x06\x00\x00\xff\xff\xb4\x75\xe7\x39\x3b\x08\x00\x00")

func serverStaticStyleCssBytes() ([]byte, error) {
	return bindataRead(
		_serverStaticStyleCss,
		"server/static/style.css",
	)
}

func serverStaticStyleCss() (*asset, error) {
	bytes, err := serverStaticStyleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/static/style.css", size: 2107, mode: os.FileMode(420), modTime: time.Unix(1598996311, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"server/templates/error.html": serverTemplatesErrorHtml,
	"server/templates/files.html": serverTemplatesFilesHtml,
	"server/templates/index.html": serverTemplatesIndexHtml,
	"server/templates/oops.html": serverTemplatesOopsHtml,
	"server/templates/pulls.html": serverTemplatesPullsHtml,
	"server/templates/recommend.html": serverTemplatesRecommendHtml,
	"server/templates/related.html": serverTemplatesRelatedHtml,
	"server/templates/search.html": serverTemplatesSearchHtml,
	"server/templates/validate-blocks.html": serverTemplatesValidateBlocksHtml,
	"server/templates/validate-files.html": serverTemplatesValidateFilesHtml,
	"server/templates/validate.html": serverTemplatesValidateHtml,
	"server/static/oops.css": serverStaticOopsCss,
	"server/static/related.css": serverStaticRelatedCss,
	"server/static/style.css": serverStaticStyleCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"server": &bintree{nil, map[string]*bintree{
		"static": &bintree{nil, map[string]*bintree{
			"oops.css": &bintree{serverStaticOopsCss, map[string]*bintree{}},
			"related.css": &bintree{serverStaticRelatedCss, map[string]*bintree{}},
			"style.css": &bintree{serverStaticStyleCss, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"error.html": &bintree{serverTemplatesErrorHtml, map[string]*bintree{}},
			"files.html": &bintree{serverTemplatesFilesHtml, map[string]*bintree{}},
			"index.html": &bintree{serverTemplatesIndexHtml, map[string]*bintree{}},
			"oops.html": &bintree{serverTemplatesOopsHtml, map[string]*bintree{}},
			"pulls.html": &bintree{serverTemplatesPullsHtml, map[string]*bintree{}},
			"recommend.html": &bintree{serverTemplatesRecommendHtml, map[string]*bintree{}},
			"related.html": &bintree{serverTemplatesRelatedHtml, map[string]*bintree{}},
			"search.html": &bintree{serverTemplatesSearchHtml, map[string]*bintree{}},
			"validate-blocks.html": &bintree{serverTemplatesValidateBlocksHtml, map[string]*bintree{}},
			"validate-files.html": &bintree{serverTemplatesValidateFilesHtml, map[string]*bintree{}},
			"validate.html": &bintree{serverTemplatesValidateHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

