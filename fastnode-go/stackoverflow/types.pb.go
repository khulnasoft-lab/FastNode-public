// Code generated by protoc-gen-go.
// source: types.proto
// DO NOT EDIT!

/*
Package stackoverflow is a generated protocol buffer package.

It is generated from these files:
	types.proto
	xmlgen.proto

It has these top-level messages:
	StackOverflowPost
	StackOverflowPage
	PostFeatures
	TermFeatures
	PageFeatures
*/
package stackoverflow

import (
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type StackOverflowPost struct {
	Post             *Post       `protobuf:"bytes,1,req,name=post" json:"post,omitempty"`
	User             *User       `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Votes            []*Vote     `protobuf:"bytes,3,rep,name=votes" json:"votes,omitempty"`
	PostLinks        []*PostLink `protobuf:"bytes,4,rep,name=postLinks" json:"postLinks,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *StackOverflowPost) Reset()         { *m = StackOverflowPost{} }
func (m *StackOverflowPost) String() string { return proto.CompactTextString(m) }
func (*StackOverflowPost) ProtoMessage()    {}

func (m *StackOverflowPost) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

func (m *StackOverflowPost) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *StackOverflowPost) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *StackOverflowPost) GetPostLinks() []*PostLink {
	if m != nil {
		return m.PostLinks
	}
	return nil
}

type StackOverflowPage struct {
	Question         *StackOverflowPost   `protobuf:"bytes,1,req,name=question" json:"question,omitempty"`
	Answers          []*StackOverflowPost `protobuf:"bytes,2,rep,name=answers" json:"answers,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *StackOverflowPage) Reset()         { *m = StackOverflowPage{} }
func (m *StackOverflowPage) String() string { return proto.CompactTextString(m) }
func (*StackOverflowPage) ProtoMessage()    {}

func (m *StackOverflowPage) GetQuestion() *StackOverflowPost {
	if m != nil {
		return m.Question
	}
	return nil
}

func (m *StackOverflowPage) GetAnswers() []*StackOverflowPost {
	if m != nil {
		return m.Answers
	}
	return nil
}

type PostFeatures struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Score            *int64 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	ViewCount        *int64 `protobuf:"varint,3,opt,name=viewCount" json:"viewCount,omitempty"`
	FavoriteCount    *int64 `protobuf:"varint,4,opt,name=favoriteCount" json:"favoriteCount,omitempty"`
	UserReputation   *int64 `protobuf:"varint,5,opt,name=userReputation" json:"userReputation,omitempty"`
	UserUpVotes      *int64 `protobuf:"varint,6,opt,name=userUpVotes" json:"userUpVotes,omitempty"`
	UserDownVotes    *int64 `protobuf:"varint,7,opt,name=userDownVotes" json:"userDownVotes,omitempty"`
	PostVotes        *int64 `protobuf:"varint,8,opt,name=postVotes" json:"postVotes,omitempty"`
	PostUpVotes      *int64 `protobuf:"varint,9,opt,name=postUpVotes" json:"postUpVotes,omitempty"`
	PostDownVotes    *int64 `protobuf:"varint,10,opt,name=postDownVotes" json:"postDownVotes,omitempty"`
	PostSpamVotes    *int64 `protobuf:"varint,11,opt,name=postSpamVotes" json:"postSpamVotes,omitempty"`
	AnswerId         *int64 `protobuf:"varint,12,opt,name=answerId" json:"answerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PostFeatures) Reset()         { *m = PostFeatures{} }
func (m *PostFeatures) String() string { return proto.CompactTextString(m) }
func (*PostFeatures) ProtoMessage()    {}

func (m *PostFeatures) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PostFeatures) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PostFeatures) GetViewCount() int64 {
	if m != nil && m.ViewCount != nil {
		return *m.ViewCount
	}
	return 0
}

func (m *PostFeatures) GetFavoriteCount() int64 {
	if m != nil && m.FavoriteCount != nil {
		return *m.FavoriteCount
	}
	return 0
}

func (m *PostFeatures) GetUserReputation() int64 {
	if m != nil && m.UserReputation != nil {
		return *m.UserReputation
	}
	return 0
}

func (m *PostFeatures) GetUserUpVotes() int64 {
	if m != nil && m.UserUpVotes != nil {
		return *m.UserUpVotes
	}
	return 0
}

func (m *PostFeatures) GetUserDownVotes() int64 {
	if m != nil && m.UserDownVotes != nil {
		return *m.UserDownVotes
	}
	return 0
}

func (m *PostFeatures) GetPostVotes() int64 {
	if m != nil && m.PostVotes != nil {
		return *m.PostVotes
	}
	return 0
}

func (m *PostFeatures) GetPostUpVotes() int64 {
	if m != nil && m.PostUpVotes != nil {
		return *m.PostUpVotes
	}
	return 0
}

func (m *PostFeatures) GetPostDownVotes() int64 {
	if m != nil && m.PostDownVotes != nil {
		return *m.PostDownVotes
	}
	return 0
}

func (m *PostFeatures) GetPostSpamVotes() int64 {
	if m != nil && m.PostSpamVotes != nil {
		return *m.PostSpamVotes
	}
	return 0
}

func (m *PostFeatures) GetAnswerId() int64 {
	if m != nil && m.AnswerId != nil {
		return *m.AnswerId
	}
	return 0
}

type TermFeatures struct {
	Term             *string `protobuf:"bytes,1,req,name=term" json:"term,omitempty"`
	Positions        []int64 `protobuf:"varint,2,rep,name=positions" json:"positions,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TermFeatures) Reset()         { *m = TermFeatures{} }
func (m *TermFeatures) String() string { return proto.CompactTextString(m) }
func (*TermFeatures) ProtoMessage()    {}

func (m *TermFeatures) GetTerm() string {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return ""
}

func (m *TermFeatures) GetPositions() []int64 {
	if m != nil {
		return m.Positions
	}
	return nil
}

type PageFeatures struct {
	Question         *PostFeatures   `protobuf:"bytes,1,req,name=question" json:"question,omitempty"`
	Answers          []*PostFeatures `protobuf:"bytes,2,rep,name=answers" json:"answers,omitempty"`
	Terms            []*TermFeatures `protobuf:"bytes,3,rep,name=terms" json:"terms,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PageFeatures) Reset()         { *m = PageFeatures{} }
func (m *PageFeatures) String() string { return proto.CompactTextString(m) }
func (*PageFeatures) ProtoMessage()    {}

func (m *PageFeatures) GetQuestion() *PostFeatures {
	if m != nil {
		return m.Question
	}
	return nil
}

func (m *PageFeatures) GetAnswers() []*PostFeatures {
	if m != nil {
		return m.Answers
	}
	return nil
}

func (m *PageFeatures) GetTerms() []*TermFeatures {
	if m != nil {
		return m.Terms
	}
	return nil
}

func init() {
}
