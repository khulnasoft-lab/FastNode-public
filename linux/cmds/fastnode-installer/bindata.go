// Code generated by go-bindata.
// sources:
// rootless-system-data/.config/autostart/fastnode-autostart.desktop.template
// rootless-system-data/.config/systemd/user/fastnode-autostart.service.template
// rootless-system-data/.config/systemd/user/fastnode-updater.service.template
// rootless-system-data/.config/systemd/user/fastnode-updater.timer
// rootless-system-data/.local/share/applications/fastnode-copilot.desktop.template
// rootless-system-data/.local/share/applications/fastnode.desktop.template
// rootless-system-data/.local/share/icons/hicolor/128x128/apps/fastnode.png
// rootless-system-data/.local/share/fastnode/fastnoded
// rootless-system-data/.local/share/fastnode/login-user
// rootless-system-data/.local/share/fastnode/logout-user
// rootless-system-data/.local/share/fastnode/uninstall
// rootless-system-data/.local/share/fastnode/update
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ConfigAutostartFastnodeAutostartDesktopTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x41\x4a\x04\x31\x10\x85\xe1\x7d\x9d\x22\x17\xe8\xe9\x13\x64\x21\xf6\xc0\x80\x3a\x2b\x71\x23\x2e\x62\xf2\xc4\x62\x92\x54\x48\x95\x68\x18\x72\x77\x69\x9d\xcd\xe3\xfd\x9b\xef\x75\x83\x5e\x4c\x9a\x3b\x56\xeb\xe3\x8d\xce\xb2\xb1\xb6\x1c\x86\xb7\xfe\x05\x7a\x1e\x0d\xfe\xae\xb5\xcc\x31\x18\x4b\xa5\x17\x74\x65\xa9\xfe\x7a\x3d\xdc\xee\x9c\x74\x0e\x05\xfe\x81\x0d\x74\x2f\xa5\xa0\xda\x5f\xb8\xc5\x3d\x3d\xba\x26\xdf\xe8\x48\x2e\x4a\x82\x8b\x52\x5a\xc6\x0e\x29\x1d\x7f\x10\x77\xe6\x24\x05\x1b\xf7\x39\xd7\x43\x96\x18\xf2\xaa\x9f\xa1\x63\xbd\xb0\xfd\x4f\x72\xcb\xa2\x43\x0d\x65\x79\x17\x31\x3a\x71\x4a\xa8\xfe\x23\x64\x05\xfd\x06\x00\x00\xff\xff\x64\x6d\x70\xbb\xbf\x00\x00\x00")

func ConfigAutostartFastnodeAutostartDesktopTemplateBytes() ([]byte, error) {
	return bindataRead(
		_ConfigAutostartFastnodeAutostartDesktopTemplate,
		".config/autostart/fastnode-autostart.desktop.template",
	)
}

func ConfigAutostartFastnodeAutostartDesktopTemplate() (*asset, error) {
	bytes, err := ConfigAutostartFastnodeAutostartDesktopTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".config/autostart/fastnode-autostart.desktop.template", size: 191, mode: os.FileMode(420), modTime: time.Unix(1592228220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigSystemdUserFastnodeAutostartServiceTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xce\x31\x4e\xc4\x30\x10\x46\xe1\xde\xa7\xf0\x05\x12\x9f\xc0\x0d\x5a\x24\xa8\x28\x02\xa2\x88\x52\x0c\xf6\x64\xb1\x70\x3c\xd1\xcc\x6f\x44\xb4\xda\xbb\xa3\x68\x2f\xf0\xde\x37\x7f\xb4\x82\xc5\x5d\xd8\x92\x96\x1d\x45\x5a\xfc\x29\xe0\xec\xa9\x43\x0c\xa4\xf0\xd2\xfc\x5a\xd4\xe0\xab\x5c\x4b\xf3\xb2\x7a\xf2\xdd\x58\x9d\x9b\x27\xd6\xdf\x92\x78\x71\xef\xc7\xce\xd1\xca\xb6\x57\x76\x13\xa8\x65\xd2\xfc\xd6\xb1\x77\xc4\xd6\x6b\x75\xcf\x7f\x9c\xa6\xb3\x16\x6f\xb7\xf1\x45\x36\xbe\x14\xbd\xdf\xc3\x58\x25\x51\x0d\xf6\x4d\xca\xe1\xfc\x86\xd4\x55\xb9\x21\x3c\x10\xc3\x60\x87\x81\xb7\xe1\x4b\x04\xce\xcd\xaf\xcd\x40\xb5\x2e\xee\x93\x1a\x38\x3f\x1d\x31\xf3\x4a\xbd\x62\x04\xe9\x95\xf1\x1f\x00\x00\xff\xff\x5b\xf9\x7b\xdf\xce\x00\x00\x00")

func ConfigSystemdUserFastnodeAutostartServiceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_ConfigSystemdUserFastnodeAutostartServiceTemplate,
		".config/systemd/user/fastnode-autostart.service.template",
	)
}

func ConfigSystemdUserFastnodeAutostartServiceTemplate() (*asset, error) {
	bytes, err := ConfigSystemdUserFastnodeAutostartServiceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".config/systemd/user/fastnode-autostart.service.template", size: 206, mode: os.FileMode(420), modTime: time.Unix(1600855671, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigSystemdUserFastnodeUpdaterServiceTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcd\x31\x8a\xc3\x30\x10\x46\xe1\x5e\xa7\x30\xea\xd7\x3a\x81\x3a\x2f\x04\x52\xa4\x70\x5c\x19\x17\x42\x1e\xf0\x10\x65\x24\x46\xbf\x42\x82\xf1\xdd\x03\x4e\xf5\x78\xd5\x37\x4f\xc2\x58\xcc\x40\x35\x2a\x17\x70\x16\x7f\x65\x50\x37\x95\x35\x80\xd4\x98\x79\x24\x7d\x71\xa4\xc5\xdc\x3f\x85\x7c\x16\xaa\x5b\x86\x19\x11\x64\x0d\xba\xde\x1a\x4a\x83\x97\x96\x92\xf9\x7f\x53\x1c\x11\x14\x7e\xdf\xfb\x4b\x7e\xd2\xc0\x7a\x1c\xae\x4f\x39\x86\xe4\xea\x16\x94\xdc\x83\x41\x2e\x36\x55\x12\x9c\xf3\xd7\x4e\xa9\xb3\xbf\xda\xce\x56\x4e\x24\xb0\xe6\x1b\x00\x00\xff\xff\x72\xa4\x4a\x48\x9b\x00\x00\x00")

func ConfigSystemdUserFastnodeUpdaterServiceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_ConfigSystemdUserFastnodeUpdaterServiceTemplate,
		".config/systemd/user/fastnode-updater.service.template",
	)
}

func ConfigSystemdUserFastnodeUpdaterServiceTemplate() (*asset, error) {
	bytes, err := ConfigSystemdUserFastnodeUpdaterServiceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".config/systemd/user/fastnode-updater.service.template", size: 155, mode: os.FileMode(420), modTime: time.Unix(1600855731, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigSystemdUserFastnodeUpdaterTimer = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x14\xcb\x31\x0a\x02\x31\x10\x46\xe1\x7e\x4e\xe1\x05\x14\x2c\xb6\x4c\xb3\xd8\x6c\xb5\x85\x8a\x45\x48\x31\x66\x07\x19\xdc\x4c\xc2\xe4\x57\xf0\xf6\x92\xea\xc1\x83\x2f\xde\x4d\x91\xe8\x22\x3d\xbb\x36\x68\xb5\xf0\x56\xc8\xf1\xd3\x36\x86\xf8\x01\x5a\xc4\x89\xe2\x6d\x34\xd1\x6a\x73\xad\xb8\x4a\x0e\x53\xa1\xd5\x06\x5e\x8c\x33\xf4\x2b\x63\x9e\xa7\x42\x14\x17\xeb\xe0\x7d\x4f\xf4\x60\x83\x6c\xf3\x2f\x3c\xb9\x6b\x3e\x81\xfd\x25\xf8\x07\x00\x00\xff\xff\x08\x82\x84\xda\x72\x00\x00\x00")

func ConfigSystemdUserFastnodeUpdaterTimerBytes() ([]byte, error) {
	return bindataRead(
		_ConfigSystemdUserFastnodeUpdaterTimer,
		".config/systemd/user/fastnode-updater.timer",
	)
}

func ConfigSystemdUserFastnodeUpdaterTimer() (*asset, error) {
	bytes, err := ConfigSystemdUserFastnodeUpdaterTimerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".config/systemd/user/fastnode-updater.timer", size: 114, mode: os.FileMode(420), modTime: time.Unix(1563889114, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareApplicationsFastnodeCopilotDesktopTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x3d\x4b\xc4\x40\x10\x40\xfb\xfd\x15\x69\x2c\x37\xcb\x5d\x75\x70\xa4\x10\x73\xa0\x88\x57\x89\x8d\x58\x8c\x9b\xc1\x0c\xd9\xcc\x0c\xfb\x01\x1b\x8e\xfc\x77\x49\x14\xac\xec\x06\xde\xcc\x1b\xde\x7b\x8f\x69\xca\xa2\xcd\x85\x73\x5c\x3e\xcc\x55\x7a\x4a\x1a\x60\xe9\x72\x2c\x68\x5e\x17\xc5\xee\x5e\x35\x90\x87\x4c\xc2\xe6\x0d\x63\x22\xe1\xee\x76\x6b\x7f\xc7\x75\x35\x57\x98\xb1\x7b\xa6\x8c\xcd\x83\x28\x05\xc9\xe6\x52\xd1\x6f\x3b\x8f\x32\x63\x4f\x71\x5d\x5d\x1b\xc4\x43\x70\x69\x84\x88\x6e\xa2\x8c\xce\x97\x18\x91\xb3\x0b\xc4\xa5\xda\xc2\x0a\x7e\xc2\x61\x67\x8d\xb5\x2c\x36\x01\x0f\x9f\x52\x9b\xbb\x62\x9e\xfc\xcf\xcf\x7f\x7c\xe4\x85\x93\x1b\xc9\x4b\x90\xe8\x0e\xc7\x53\x3d\x1c\x4f\x0e\x54\xd3\xae\x6b\x95\xbf\xcc\x0b\xcd\xb8\xe7\xc0\x5f\x8e\xab\x76\xe3\xe7\x6a\x93\x1f\x71\x46\x3b\x02\x0f\x01\xe3\x7e\x75\x36\xdf\x01\x00\x00\xff\xff\x37\xd9\xc7\x23\x1d\x01\x00\x00")

func LocalShareApplicationsFastnodeCopilotDesktopTemplateBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareApplicationsFastnodeCopilotDesktopTemplate,
		".local/share/applications/fastnode-copilot.desktop.template",
	)
}

func LocalShareApplicationsFastnodeCopilotDesktopTemplate() (*asset, error) {
	bytes, err := LocalShareApplicationsFastnodeCopilotDesktopTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/applications/fastnode-copilot.desktop.template", size: 285, mode: os.FileMode(420), modTime: time.Unix(1592228220, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareApplicationsFastnodeDesktopTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xbd\x6a\x03\x31\x10\x84\xfb\x7d\x0a\xbd\x40\x4e\xd8\x95\xc1\x5c\x11\x7c\x07\x31\xf9\xa9\x42\x9a\x90\x42\xec\x0d\xf6\x62\x49\xbb\x48\x22\xb1\x31\xf7\xee\xe1\xec\xb4\x69\x96\x1d\x98\xf9\x66\x3e\x07\xd4\x53\x53\x73\x63\x6e\xe5\xf2\x45\xef\x17\x43\xff\x68\x16\x85\x43\x13\xcd\xf4\x81\x52\x45\x73\x7f\xbd\x76\x7f\xef\x3c\xd3\x5b\x48\xe8\x9f\xa5\x81\x76\x9a\x12\x72\xbb\x09\xf7\xe0\x5e\x5f\x9c\xe9\x0f\x0a\x26\xc7\x3a\xc1\xb1\x26\x8b\x58\x40\x95\xc6\x33\x78\xc1\x3c\x69\xc2\x20\x65\x9e\x7d\x17\x95\x43\xf4\xf5\x18\x0a\xfc\x49\xda\xfd\x4c\xb4\xe7\x7b\xe1\x3f\x4e\x61\xcd\xd5\x1f\x85\x35\x6a\xf1\xab\xf5\xe6\xbc\x5a\x6f\x7c\x30\xab\xb7\x7c\x67\xf9\x40\xbb\xd0\x70\xd0\x22\xa8\xfd\x80\x6f\x44\xb5\x65\xe6\x76\x3f\x8c\x5b\xfa\x0d\x00\x00\xff\xff\x0c\x0a\x11\x1b\xf4\x00\x00\x00")

func LocalShareApplicationsFastnodeDesktopTemplateBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareApplicationsFastnodeDesktopTemplate,
		".local/share/applications/fastnode.desktop.template",
	)
}

func LocalShareApplicationsFastnodeDesktopTemplate() (*asset, error) {
	bytes, err := LocalShareApplicationsFastnodeDesktopTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/applications/fastnode.desktop.template", size: 244, mode: os.FileMode(420), modTime: time.Unix(1563889114, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareIconsHicolor128x128AppsFastnodePng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x97\x79\x50\x53\xe7\xfa\xc7\xdf\x04\x64\x13\x14\x64\x15\x0a\xa6\xa1\x02\x22\x90\x90\x04\x08\x91\x10\x20\x2c\xa2\x2c\x11\x10\x15\xd9\xb2\x41\x02\xd9\x9a\x44\x16\x45\x08\x08\x5c\x90\x4d\xa8\xd5\xc4\x52\x45\x45\x69\xb5\xa2\x08\xb2\x08\xb2\x08\x0a\x48\x84\x5a\x50\x10\x65\xdf\x95\x82\x6c\x82\xa8\xf0\x1b\x7a\xf5\xde\x3b\xbf\xb9\xd3\x3f\xee\x3b\x73\x66\xde\xf3\xcc\xf7\xf3\x7d\x9e\xf7\x39\xcf\x99\x39\x27\x9d\xe4\xe5\xa6\xa2\xa4\xab\x04\x00\x50\x71\xdf\xeb\xec\x03\x00\x10\x6d\x5c\x0a\x72\x00\x80\x46\x7b\x72\x1b\x00\x60\xbb\xd0\xe5\xb0\xd0\x97\x1b\x26\x8c\x26\xf3\xe9\xc0\x91\xc6\xa5\xd0\x61\xee\x6c\x72\x38\xdd\x87\x4e\xa6\xc5\x7e\xdf\x4a\xb7\x03\x40\x86\xc1\xf4\x3b\x2c\x3c\xec\xe9\x81\xa3\x72\xd9\x16\xe4\x0d\x8d\x45\x0c\x9b\x07\x36\x96\x1d\x21\x86\x47\xa6\x46\xd2\x85\x30\x0a\x3d\x9c\xc9\xc1\xc3\x67\xab\xeb\xe0\x30\x26\x0d\x0f\x3f\x64\xe5\x89\xf4\xe4\x11\xe9\x0c\xe6\xde\xe3\x7c\xba\xef\x71\x2f\x3f\xea\xf1\x48\xaa\x2d\x0d\x4e\xb0\x87\xd9\xc5\xe0\x62\xd8\x3c\x36\x5d\x48\x86\xc5\xb0\x59\x1c\x01\x2e\x06\x0f\xff\xcb\x17\xc7\x11\xe0\x36\xc2\x08\x38\xec\x2f\x89\x30\x12\x0f\xff\x67\x51\x87\x3d\x49\x30\x22\x97\x4f\x87\x59\x59\x58\x9b\x53\x91\x96\x18\x98\x8d\xad\x85\xa5\x95\xb5\x8d\xad\x8d\x19\x0c\x85\xb4\xc4\x20\x90\x58\x04\x0a\x69\x8e\xb4\xc5\x59\xa1\x71\x48\x14\xec\xcb\x82\xdb\xc3\xec\xf8\xb4\x30\x9c\x8f\xb3\xeb\x97\x5c\x7c\x5a\x18\x1e\xce\x10\x0a\x79\x38\x04\x22\x3a\x3a\xda\x22\x1a\x6d\xc1\xe5\x87\x23\x2c\x6d\x6d\x6d\x11\x48\x14\x02\x85\x32\xe7\xd3\xc2\xcc\x05\xb1\x1c\x21\x39\xc6\x9c\x23\x30\xfc\xea\xe0\x4c\x17\x50\xf9\x4c\x9e\x90\xc9\xe5\xc0\x36\xee\xc9\x14\xee\x31\x21\x1e\x0e\xff\x7a\x04\x36\xcf\xd3\xf3\x5f\xc6\x1c\xc1\x97\x46\x51\xb9\x6c\x44\x0c\x99\x87\xb0\xb4\x40\x22\xd8\x6c\xc4\x57\xb5\x40\xe8\x43\x0f\xfb\x7b\xb5\xc0\x2f\x96\x47\x47\xf8\xd0\x05\xdc\x63\x7c\x2a\xdd\x87\x1e\x66\xf8\x1f\xa9\xfe\x1e\xdd\x10\xf2\x3c\x3d\x71\xde\x7c\x66\x38\x93\x43\x66\x39\x73\xa9\xc7\xd8\x74\x8e\xd0\xdd\x19\x0f\x8f\x61\xf3\x2c\x68\x4c\x1a\xce\xd5\xc5\xc6\xd5\xd2\xd2\x06\x83\xb4\x41\x21\xad\xb1\x96\x96\x58\xa2\x25\x06\x6b\xe5\x8a\xc1\xb8\x5a\xa2\x1d\x1d\x5d\x1d\xbf\x7a\xfc\x37\xd6\xc6\x05\x8b\x42\xd9\x38\x59\x13\x31\x1b\xa4\x0b\x06\x8b\xb1\x42\x3b\x59\x3b\x3a\xbb\xa0\xb1\x68\xac\x13\x0a\xf3\x95\x75\xe7\x08\x84\x64\x0e\x95\xfe\x95\x65\xfe\x9b\xb5\xfa\x5b\x16\x47\xe4\xd3\xc9\x42\x2e\xdf\x8f\xcb\x65\x7d\x9d\x00\x12\x83\x2b\xe4\x0a\x18\x5c\x1e\x8c\xe8\x6b\x0d\x33\xf1\x24\x53\x99\x9c\x8d\xc0\xae\x8d\x07\xf4\xa5\x56\x3a\x9f\x19\x45\xa7\xb9\xf2\xb9\x6c\xd8\x5f\x1d\xc6\x31\xff\x4b\x05\x58\x22\xda\x19\x8b\x41\x22\x91\xb6\x5f\x4e\x8e\x42\x39\x3a\x61\x9d\x51\x8e\x18\x0c\xda\xc5\xd5\xca\x15\xfe\x85\xa5\xfd\x2f\x5d\x43\xd8\xc3\xec\x10\xff\x6f\x5c\xbe\x86\x7c\x9c\x5d\x37\xb6\xff\x1a\x7e\x7b\xd8\xbf\x5f\x1f\x3a\x87\x86\x87\xf3\xe1\x04\xfb\xfb\x0a\xc8\xcb\x00\x28\x95\xba\x3b\x3b\xfa\xc5\xf4\x4e\x07\x29\x9e\xf1\x7b\xae\xf9\x00\xdf\xd9\x78\xa7\x32\xf1\x17\xc8\xf2\xce\x88\x2e\x9f\x11\x2d\x8a\xc7\x3e\x0c\x63\x78\x5b\x59\xe0\xb0\x85\x2b\xc5\x94\xb3\xe9\xb1\x6a\x83\xa6\x8d\x9f\xd9\x0f\x0c\xe6\xf0\x85\x7b\xaf\x6f\x35\xdd\x32\x3b\x26\x27\x1f\x28\x6f\x98\xb6\x8f\xe9\xe1\xa7\x4a\x4a\x0b\x45\xca\x24\x92\xc5\x9c\xd9\xd6\x6a\xfd\x75\x0c\x9e\xbd\xbc\x18\x32\xf3\xf1\xa4\xf7\xf3\xcb\x93\x53\x92\x99\xe5\x81\x3d\xeb\x9f\x3f\xf6\x07\x05\x1b\x5d\xea\xf8\xe1\x72\xfc\xb3\xd0\xa0\x50\x28\x52\x0c\x94\x8d\xc0\x29\xc5\xfa\x7f\x6e\x97\x92\x59\x3a\x3b\xee\x32\x0e\x66\xf7\xda\x4f\x5d\x61\x19\xe5\x46\x32\xc2\x66\x9a\xe3\xec\xb3\x64\xca\xac\xbd\xcb\x98\x02\x99\xac\xde\xdf\xdc\x6f\x83\xfe\xa9\xc9\xeb\xfb\x27\x8a\x0b\x13\xb3\xd2\x4d\x06\x69\xe3\x7d\x70\xd1\x4f\xe2\x1c\x94\x6f\x69\xf5\xa3\x65\xad\x3f\xd1\xd8\x9b\x47\x41\xe5\x42\xf7\x44\x82\x5c\x13\x42\x94\x25\xfe\x61\x6c\x7d\x40\xab\xf6\xe1\xa7\x9d\x0b\x6a\x61\x15\xcb\xbe\x98\xcd\xb0\x27\x7a\x6d\xd1\x7a\x83\xf0\x71\x2d\x17\x82\x5e\x43\x9c\xe8\x65\xbb\x5d\xca\xcb\x8e\x8b\x8b\x53\x1a\xf5\x5e\xd2\x85\xb6\x9a\x3a\x9b\x05\x6f\xa9\x44\xba\xc3\x52\xbe\x87\x57\xb4\x1f\xf8\x9a\x7e\xd3\x85\x6f\x72\x5d\xd1\x5b\x30\x96\x3a\x5a\x4f\xaf\x6d\x1e\x54\x1d\x7f\x76\x70\xed\xa9\x85\x74\x00\x15\x6e\xd9\x41\xe5\x30\x1a\x67\x8b\x40\xe8\x96\x01\x52\xe3\xc0\x6c\x4b\x8d\xc4\xf6\xa7\xd8\x6f\x05\x69\x8a\xf5\x88\xfc\x9d\x9d\xc7\x6f\xf5\x9c\xb3\xfd\xf1\x03\x4e\xb0\x4d\xe0\xab\x2e\x8a\x67\x3d\xac\x31\x1b\xed\x78\x9d\x17\x9b\xa5\x30\xa4\x34\x8e\x54\x17\x05\x07\x6a\x0d\xfd\x7c\x3a\xb1\x2e\xdf\xd6\x4d\xb6\xe4\x9a\xa2\x83\x76\x94\xf6\x6e\xfb\xec\x23\x61\x79\x52\x05\xdf\xb1\x03\x64\x28\x49\xa4\xd7\x04\x32\x37\x13\x9b\xf6\xc6\x05\x65\x3e\xd6\xf7\x04\xad\x43\x26\xe3\x97\x15\x4f\x2e\xcb\xdd\x65\xe5\xef\x6c\x6b\x09\xf2\x00\x73\xd0\x9f\xf0\xdd\xbb\x18\xcd\xb0\x58\x59\x32\x71\x6a\xe6\x8c\x3f\xdc\x48\xa4\x24\xaa\xe6\x1a\xd3\x93\x9a\x5e\xa0\xca\xc5\x25\xcf\x6b\x2a\x14\x61\x38\x56\x7b\xfe\x2f\x65\x6c\x1e\xaa\xe1\xa5\x6c\x91\x7a\xbe\xb7\xa1\x07\x18\x1a\x31\xe5\x5b\x84\x3c\x65\xd0\x0c\x3a\xe2\xd2\x3f\x68\x8f\x47\x7b\x80\xa1\x41\x3d\x69\x27\xfe\x4d\x5b\xa6\xce\xcd\x4e\x89\x37\x72\xab\x35\xa4\xeb\x85\xc4\xb7\x35\x24\xfc\xf9\x90\x54\x6b\x1c\x2d\x9d\x95\x80\x1b\xcd\xe9\xa3\x57\x4e\xc4\x35\x9b\x8c\xfb\x4a\x27\xc4\x6e\x17\x80\x69\xe3\xea\x68\x39\xa5\x33\x59\x46\x92\x63\x19\x12\x6a\x70\xf5\xd7\x01\x2b\x25\x50\xcd\x7d\x45\xc2\xcd\x99\x8f\x37\x4a\xcf\xd3\xcf\x45\xa2\x20\x8b\x4d\x51\xd2\xcd\x26\x9f\x1d\x74\x3e\x3e\xb8\x9b\x9c\x7c\xf9\x15\x0b\xca\xab\x3c\x57\x65\xf0\x7c\x6b\x6d\xfb\x27\x7c\x55\xdf\xa3\x12\x69\xe2\x92\x19\xb0\x33\x4e\xd8\xbb\x94\xde\x27\x8e\x46\x85\x50\x2f\x9a\x47\x91\x82\x14\x61\xbb\xdb\x6a\x8f\x37\xb7\x4b\x8f\xb6\xa6\xdc\xcc\xba\xaa\x63\xdd\x50\xa6\x30\xa8\x3c\x6e\x6f\xbd\xb6\xde\xfc\x7e\x34\xef\xe8\xe0\xe9\x8b\xf5\x9f\xf6\x5d\xd8\x04\xea\x3e\xd2\xf4\x16\xf2\x7a\x2e\xc4\xe2\x53\x76\xc8\x15\xed\x03\x69\xb5\xdb\xc3\xa8\x41\x5a\x7f\x32\x35\x41\xd2\xee\xf6\x92\x39\xf3\x0c\xaf\xf1\xcc\x32\x25\x90\x68\xf0\x99\x9d\xd9\x46\xb1\x10\x04\xeb\x6e\xe2\xe9\xec\xea\xdb\x71\x28\xd5\xfa\x34\xb2\x0f\xbf\x0b\x82\xc9\xf8\x9e\xba\xc2\xf7\xd8\x3f\x82\x7a\x57\x34\x6a\x4d\x50\x1e\x9b\xdb\x5e\xf5\x7b\xa9\x9f\x22\x88\xec\xdd\xcf\x62\xed\x86\x46\xc9\x11\xdc\x7f\x02\x67\x4e\x96\x96\x64\xb1\xe7\x3b\x13\xb6\x41\x7b\x32\xf2\x3b\x1b\x49\x55\x10\xb1\x29\x04\x56\x6d\x1c\x39\x12\xa0\x66\x0f\xaf\xd0\xcc\xd7\x85\x7c\xb3\xff\xa2\xec\x3e\x53\x48\x92\xab\xff\x75\x17\xf0\x4e\xe0\x7d\xa0\xab\x6a\x47\x0c\x4c\xf4\x02\x5b\xfb\x9d\x05\x24\x33\x7c\xa6\xa0\x90\x4a\x30\xd2\xce\x15\x80\x2a\x2c\x3e\xcb\x21\xb6\x7a\x3b\x53\xad\xde\x7f\x34\xf0\x42\x80\xe8\x60\x8b\xcf\x78\x86\xf4\x19\x5c\xb6\x4b\x43\xba\x2b\x62\x84\x20\x49\xf0\xce\x00\xc5\x46\xe7\xc9\x37\x21\x0a\x0f\xee\x17\x4d\x86\x23\x4e\x9f\x4c\xea\x2a\xfe\x28\x0e\x52\xea\x4d\xbf\x51\x14\xd9\x09\x03\xce\x0d\x17\xaf\x4c\xb6\xaf\xda\x9e\x3c\x80\x5f\xbc\x29\xbd\x9c\xb8\x1c\x4c\xbf\xe8\x6c\x61\x38\xb5\x75\xb4\x86\xe7\x7e\x79\x67\x31\x22\x22\x6d\xa5\xb4\x64\xba\xcd\x64\xfb\x27\x79\xe8\xdb\x88\x64\xea\xfa\x8f\x81\xed\x84\xf2\x6b\xa7\x96\xe4\xd4\xb2\xad\x52\x03\x93\xb7\x0d\x2f\xae\xe9\x09\xf6\x1c\x6a\x55\xaa\x3f\x01\x19\x6c\x1f\x08\x69\x1d\xbc\x0d\xd3\x8e\xf1\x01\x4e\x25\x6a\x19\x22\x9c\x43\x45\x6b\x5f\x02\x6e\x29\xb3\x33\x21\x23\xd0\x05\x55\x98\x60\xe8\x75\xdb\xf0\x7a\x79\x6d\xeb\xa7\xdf\xa3\x21\x2c\x93\x8e\x78\x73\x07\xcd\xb9\xe5\xb1\xf5\xb4\xca\x07\x65\x93\x9f\x83\x5a\x53\xc2\x47\xda\xf7\x14\x4f\x3e\x88\x16\x4f\xe4\x6d\x1e\x72\xcd\xef\x9f\x4f\x7b\xd5\xab\x15\xde\xec\xbc\x53\xa4\x58\x58\xf4\xe4\x85\xdd\x78\x56\x62\xf7\x44\xeb\x93\x42\x0d\x5e\x05\x61\xaf\x45\xca\xdb\xb4\x2b\xcb\xfd\x86\xe7\xcb\xee\x1a\xdb\x1e\x7a\xef\x73\xa9\x7b\xfd\x80\x12\x78\xfc\x1c\xeb\x12\xbd\xfe\x28\x71\x4a\xef\x62\xcb\xa5\x83\x8c\x1a\xfb\xf6\xb8\x73\x2f\xfa\x1e\xe4\x7b\x17\xef\xb3\x4d\x16\xad\x6e\xca\x20\xb2\xde\x16\xdd\xf5\x99\x0b\x00\x3d\x73\x7a\xbf\xd0\xde\x5d\x3a\x7f\x2d\x08\xa2\x53\x19\xb1\xaf\x31\xfe\x90\xd9\x7c\xf3\xbe\x1e\x74\x46\x8b\xcb\xdb\x99\x5d\x39\x67\x5d\xbe\x35\xf7\x25\x2c\x1d\x01\x93\x77\xa8\x67\x95\xe3\x2b\xcc\x3e\xce\x27\x4a\xa6\x7e\xb3\x8f\x7f\x91\x3b\x7f\xb8\xf2\x52\xbe\x1b\x3a\x6d\x27\x65\xd6\x41\xa1\xee\xcc\xf6\x87\x19\x53\x04\x16\xa4\x2b\xa0\xc9\x96\x15\x6a\xbe\x43\xb9\xa8\x36\x29\x62\x0f\x1a\xb4\x1d\x29\x2c\x1e\x72\xce\x1b\x78\x76\x7f\x6c\xf8\xdc\x93\x25\xa2\xc2\xc8\xa3\x30\x12\x1b\xa4\x9a\x8b\x4a\x28\xbb\x22\xeb\xf9\x6f\x24\x1e\x25\x88\x85\x64\xd5\x14\x7b\xd7\xeb\x91\x66\x5b\x2b\x10\x73\x7d\x75\x79\xb5\x58\x37\x7f\xb5\x1f\x43\x13\xcd\x20\x0f\x34\xc0\x8d\xd8\xa0\xa2\xc9\x99\x4b\x3e\x8b\x1e\xb5\xb8\xa4\x66\xfd\x30\xf5\xef\xf8\x14\xb4\x62\x6c\xd6\x23\xb7\x6e\x61\x8b\x81\x8c\xbf\x16\xe1\xdc\xc9\x14\xbe\x43\xee\xaf\x07\x6b\x95\x0a\x76\x73\xde\xde\x53\x1e\x74\xae\xda\xf9\x4e\xd7\xea\xf8\x96\xf4\x77\x1f\x07\x27\x1c\x0e\x6c\x9e\x86\xc1\x1f\xdd\xaa\x14\x5b\x45\x6d\x9b\x85\x57\x94\x62\x5d\xe3\x6f\x6b\x04\xe4\x4d\xfe\x76\x47\xf6\x1d\x62\x7c\x79\xec\xa5\x18\x63\xa1\xf4\xda\x3d\xeb\xae\x5f\x86\x0c\x71\xac\x04\x7d\x34\xb3\x61\x58\xda\xef\x55\xb2\x7f\x30\x52\xd4\x41\x0e\xcb\x6d\x58\x4d\xea\x80\x82\x17\x67\x6e\x16\xc4\x1e\x4c\x3a\xb5\x8e\xa9\xc2\xaf\x41\xbd\x0a\x57\x4a\xb3\xff\xd1\x36\xa2\x9a\x23\x37\x0d\xdb\x62\x6a\x79\x94\xc2\x5c\xf5\xe4\x07\xef\x65\x11\xd7\x89\x93\xf7\x80\x52\x7d\x90\xe8\xc2\xfd\x48\x6a\xad\x96\x90\x85\x9c\x01\x27\xd4\xce\x1b\x9b\x3c\x66\x8f\x1d\x48\x76\x1b\x91\x94\xcd\xcc\x1d\x4b\x23\xc4\x38\x27\x23\x2f\x6c\xc3\x8d\x20\x6f\xdc\x1a\xdc\xd3\xa2\xe9\xf9\x29\x3a\xb3\x9b\xbf\x67\x21\xab\x3e\x32\x8d\x44\xd4\xf8\xa3\x9d\x22\x53\xd6\x96\xd9\x45\xa2\xd4\x0d\xf7\x15\xea\x6a\x5f\xb3\x79\xe7\xce\x3f\x36\x3f\x9c\x56\x77\x4a\x85\x4f\x1f\x5c\x7a\x4c\xd9\xcc\x80\xbe\x97\x27\xe9\xdc\x50\x4d\x2f\x84\x1e\x90\x4f\x86\x95\xd2\xbf\x73\xc9\xef\xff\xee\xd4\x0e\x69\x41\xd5\x99\x45\x03\xa8\x95\xd3\xf4\x59\xe6\x5d\x5c\xeb\xf5\x23\xa0\x3e\x4e\xa2\x68\x90\x35\xb9\x30\xd1\x62\x58\x24\x62\x37\xad\xfc\x91\x9d\x4b\x29\xcb\xf6\xac\x06\xa2\xf5\x33\x0b\x6a\xaf\xb5\x1a\xc2\xbd\x0b\x2e\x7e\x1f\xc7\x93\xae\xf8\x45\x70\x82\xf1\x0a\x05\xa1\xd3\xa1\x91\x42\x9f\xb4\x4b\xe9\xf3\xd3\x1d\xb2\xc1\x23\x1a\x39\xbe\x78\xdd\x38\xbb\xf2\xe0\x62\x6d\x88\x86\x88\xdd\xdb\x29\xbe\x19\xf9\xe9\x1b\xd6\x7b\x0f\x33\xf2\x66\x4c\xec\x77\x60\x1a\x12\xe7\xcf\x85\x02\x5e\xd7\x13\x35\xca\x83\x65\x4d\x6c\xeb\x6e\x9d\x3d\x09\xb0\x05\xf9\x51\xed\x80\x1f\x38\x0e\xc4\x87\xda\x09\xaa\x07\x67\xcc\x37\x53\xbe\x5d\x12\xda\x37\x1c\x7c\x7b\x34\xe5\xfb\xa6\x5d\x65\xcf\x4b\x81\xa8\x0a\x9e\x14\xd1\x59\x10\x3a\xb9\xe9\x14\x9a\x1c\x3a\x33\x2b\x01\xe3\xad\x4b\xdd\xf7\x00\x18\x7d\xd3\x90\x2b\x4c\x48\xa9\xcb\x11\x65\x12\xe4\x82\xaf\xf6\x9f\xc9\x49\x31\x2a\xf9\xb6\x8b\x09\xe5\x89\xda\x34\x5e\x15\xda\xf8\x23\xd9\x70\xe9\x6e\x71\xb3\xbc\xfc\xd9\x9c\x7f\xd8\x96\x33\x18\xc9\xe5\xfc\x39\x9d\xd7\xdf\x77\x9d\x38\x82\x61\x5d\x93\xeb\xbb\xde\x42\xa8\xec\x69\x6c\x08\x31\x44\x8b\x14\x0b\x64\xe3\x3d\x67\x74\xca\x35\x5d\x08\xb3\x26\x96\x3d\xaa\x6d\xe3\x06\x4a\x83\xec\x55\xf8\x81\x47\xb2\x24\x28\xd6\x7f\x53\xf8\x26\xf9\xc6\xfb\xaa\x51\x9a\x99\x95\xfa\x5e\xf7\xe7\xb7\xde\x68\x10\xfa\xe4\x65\x17\x7f\x38\x6c\xdd\xd4\x92\x75\xf6\x9e\xfd\x9b\xb1\xd7\x7e\x8b\xf6\x61\xa7\xb2\xec\x34\x1d\x6e\x9e\x4b\x65\x20\x7a\x92\x4d\xb6\x8f\xea\xc2\x9e\x9a\x1d\x46\x4c\x44\x8e\x26\x99\xc5\xc9\x1a\xd0\xff\x34\x12\x3d\x29\x21\xe9\x34\xd1\xf6\xbd\x2b\xb8\xa6\x9b\x28\x6e\xd8\x19\xa0\x3b\x32\xd2\x9a\xcf\x33\xdf\xe1\xb6\x46\xb9\x70\xfd\xf1\x8a\x89\xa8\xe1\x2c\xe9\x53\xe0\xde\x18\x2f\x5f\xaa\x53\xac\x6c\xe8\xb3\xfe\x9f\xa3\x33\x21\x7b\x07\x82\x5f\x8a\x3f\x5c\x22\x32\xef\x84\x9f\xaa\xc3\x9e\x2f\x7a\xf9\x5c\xa8\xbe\x8a\x39\x7f\xc8\x42\xc4\x4a\x65\xa8\xae\xa3\x0b\x2c\xcb\x23\x90\xde\x51\x51\x13\x6e\x63\x3f\xeb\x94\x2f\xec\x05\x7f\xbe\x76\xd3\x97\x98\xde\xff\x35\x57\x3b\xe3\xb3\xe1\x74\xb7\x87\x7d\x48\x75\x0d\xae\x2a\xb7\xad\x7b\xd4\x44\xbd\x73\xe5\xf6\xf8\xec\x9e\x13\x2f\x94\x02\x6a\x4c\x2b\x0e\x96\x27\x1a\xc0\x0f\x2d\x7b\x5b\xf1\x8c\xb7\x4a\xc3\xda\xd7\x9f\x06\xbf\xed\x43\x95\x85\x8c\xe9\xa7\x3c\x63\x0e\x67\xeb\xff\x81\xb8\x1a\x2d\xc7\x08\xdb\x4f\x29\x5d\x9b\x93\xa8\xf7\xa1\xde\x8e\x06\x99\xeb\xeb\xa4\xf0\xb6\x64\xf9\x17\x27\x7e\x63\x13\xbb\x8a\x9c\x29\x6a\xf0\xdc\x6e\x95\x35\xff\x4c\xa1\xb0\x38\x70\x6b\xb8\xe3\xd9\xb9\x54\x32\x74\x6a\x98\x1b\x3d\x36\x7f\x43\x77\xec\x1a\x38\x2e\xd1\x78\x98\x6d\xa3\xac\xc7\x5b\x13\x32\x23\xfd\x02\x64\x49\x60\x58\x45\x4d\xe3\x7e\x00\xf9\x55\x00\x26\xea\x70\xaf\x2c\xf8\x24\x89\xc8\xb1\x51\xd6\xfb\xb9\xb0\xe9\xf3\xd1\xad\x50\x10\x91\x6e\x93\x09\x35\xd9\x62\x39\x20\xab\x8a\x50\xe5\xca\x73\x87\x95\x37\xb1\x99\x57\x15\x3a\xd6\xd0\x90\xc5\x2d\x5d\xef\x6e\x1a\xf5\x23\x4d\x3d\x3a\x7b\x1d\x99\xda\x80\xc4\xac\x21\xfb\x39\x2c\xce\x7b\xa8\x3b\xcc\xaf\xdc\x8d\x69\xfc\x45\xa4\x3c\x75\xcd\x08\xe8\x4f\x9a\xf7\xdf\xb1\x28\x5a\x3f\xae\x01\x48\x69\x36\x81\x3a\x57\x21\x0c\x28\x29\xf5\x3c\x4d\x82\x35\x1e\x9e\x3d\xa2\xd1\x18\x2d\x06\xab\x0a\x4d\x7a\x57\xb6\xad\x74\xaa\xc5\xbb\x99\x85\xaf\x4b\xc0\x6a\x36\x7d\x14\x75\xfa\xea\x0d\x6e\xcf\x8d\x07\x32\x6f\x82\x80\x83\xdf\x92\x0a\x75\xcf\xc7\x0e\x59\xd5\x2d\x0f\x8b\xb9\x69\x6e\xd2\x6a\x23\x50\xa7\x1a\x76\xb2\xb1\xa7\x7d\x0d\x0d\x49\xce\x70\x3a\xd9\x18\x20\x58\x0e\x88\xab\x3c\xac\xee\xc0\xd4\x78\xa3\xf7\xde\xea\x94\xf1\x8b\xd2\x75\x0f\xf0\x0c\xcc\xa5\x9a\x8c\xf6\x9c\x5f\x4d\x35\x39\x52\x5d\x2f\x3b\x48\x50\x9a\x4b\xad\xf0\xff\x10\xcd\xae\x0d\x2c\x50\x2c\xb8\x3b\xf6\x8d\x69\x8e\x97\x47\xe7\xea\x80\x2c\x09\x4f\xfa\xf1\xb7\xbc\x98\x46\x3a\x85\x28\x06\x3e\x0a\x4d\x7a\x06\x5e\x63\x23\x2a\x54\xc2\x46\x4e\xc4\x60\xbf\xb9\x36\xb7\xe7\x4d\xe7\x23\x31\x58\x4d\x75\xaa\x19\x12\x5e\x52\x71\x50\x77\x60\x3b\xd4\x0c\x91\xbb\xd0\xfd\xaa\xb9\x75\xdc\x0f\x42\xb5\x23\x21\x27\x08\xc6\x53\x93\x2a\xad\x8f\x7b\xb5\x86\x55\xd4\x02\x93\x88\xa6\xaa\x1f\x0f\xcd\x4f\xd7\xe9\x74\x4e\x74\x22\x40\xa1\x3f\x5c\x53\x7f\xd7\x94\x27\x6e\x1c\xd9\xa4\x07\x5f\x29\xed\x96\x29\xb4\x5c\x61\x70\x5d\x8f\x86\xa4\xe6\x1a\x18\xd8\xfc\x3e\x4c\x8f\x9c\x7f\xfd\x6b\xec\x31\xfd\x80\xe2\xa7\x3a\xf1\x85\xa9\x36\x34\x0f\x20\x87\x86\xaa\xfc\xc7\xd7\xa1\x11\x20\xc2\x57\x02\x45\x10\x10\x71\xd4\xb0\x27\xc3\xe3\xd5\xc0\xc6\x8f\xa1\xbb\x8b\x97\x73\xb1\x53\x68\xd2\xff\x05\x00\x00\xff\xff\xac\x67\x10\x08\x85\x0e\x00\x00")

func LocalShareIconsHicolor128x128AppsFastnodePngBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareIconsHicolor128x128AppsFastnodePng,
		".local/share/icons/hicolor/128x128/apps/fastnode.png",
	)
}

func LocalShareIconsHicolor128x128AppsFastnodePng() (*asset, error) {
	bytes, err := LocalShareIconsHicolor128x128AppsFastnodePngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/icons/hicolor/128x128/apps/fastnode.png", size: 3717, mode: os.FileMode(420), modTime: time.Unix(1563889114, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareFastnodeFastnoded = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x5d\x6f\x2b\x35\x14\x7c\xf7\xaf\x18\xdc\xe8\x26\x41\xdd\x2c\x7d\xe5\x2a\x82\x0b\x0d\x25\xba\xdc\x44\x4a\x3f\x84\x54\x95\xca\x8d\xcf\x66\xad\x6e\xec\x60\x7b\xd3\x02\xe5\xbf\x23\x7b\x3f\x93\x00\x42\xc0\xdb\xca\x7b\xce\x9c\x99\xf1\xf8\x9c\x7d\x96\x3e\x29\x9d\xba\x9c\xb1\x33\xac\x68\x6b\xf6\xe4\xa0\xb4\xf3\xa2\x28\x48\x62\x4f\xd6\x29\xa3\x1d\x4c\x86\x67\xe5\xe9\x1c\x2f\xb9\x5a\xe7\x10\x96\x60\x0a\x49\x16\x3e\x17\x1a\x3e\x27\xac\x4b\x6b\x49\xfb\xa6\x85\xd9\x08\xb6\x2c\xe4\x5d\x8d\x31\x1a\xe3\x37\x06\xdc\x23\xf9\x15\x7c\xb0\x5a\x2e\x6f\x38\x1e\xf0\xee\x1d\x2c\xf9\xd2\xea\xee\xd7\xb7\xb7\xab\xd5\x6c\x71\xf3\x78\x39\x5f\x2d\x3e\x7c\x9a\x1d\x56\x31\x20\x33\x16\x3b\xe1\x73\x28\x8d\xc1\x28\x53\x5a\xb6\x78\x89\x16\x5b\xc2\x30\x50\x4d\xf6\x9f\x0f\xf1\x06\x67\xac\x1f\xbf\x87\x34\x0c\x00\x54\x86\xfb\x3f\x9b\x30\x05\x1f\x8c\x9e\x84\xa3\xd8\xcf\x07\x01\x9e\x8f\x39\x1e\xde\x07\x6d\x3a\xf6\x02\x67\x90\x46\x0f\x3d\x2a\x69\xc7\x8a\x21\xb4\x44\x21\x3c\xd9\xd6\xb6\xba\xaf\x15\x08\x50\xe1\xa8\x3e\xa5\x75\x6e\xc0\xa3\xe7\x4a\x6f\x82\x9d\x2d\x92\xc9\xf0\x51\x79\xfa\x12\x15\x91\x06\x66\x8b\xc4\x66\x0d\xbb\x78\x98\x29\x86\x40\x8a\xd8\xef\x8c\x05\x0b\xa6\x7c\xf0\xfd\xf2\xd3\x2c\x9d\x14\x66\x2d\x8a\xd4\xe5\xc2\x52\x1a\xec\xe0\xac\x16\x3d\xad\xbc\x4a\x6b\xf6\x9c\xb1\x23\x37\xa6\x87\x56\x8c\x2c\x09\x59\x28\xfd\x8c\x24\xeb\xac\x0b\xe6\xbc\x61\x63\x69\x07\x5e\xb9\xcd\xc7\xed\x88\xc7\xbb\xd9\xea\x7a\xbe\x5c\x04\xa4\x4a\xe5\xa9\xe3\x6f\x70\x24\x91\x10\x86\x2e\xfd\xa9\x42\x48\xd3\xcd\x70\xcc\xd9\x51\x0a\x6a\xac\x3a\x05\x15\x9c\x36\x31\x8d\xad\x5f\x99\x29\xb5\x84\xf0\x88\xd2\x26\xf0\x64\xb7\x4a\x0b\xaf\xf4\x66\xc2\x63\xdb\xab\xf2\xb8\x60\xec\xe3\xfc\x66\x76\xf9\xf8\xdd\x0f\x1f\xae\xae\xa7\x7c\xf0\x35\x67\x8c\x5e\x77\xc6\x7a\x5c\x2d\x2f\x67\xdf\xdc\x5e\x4d\xf9\x56\xc8\xbd\x34\xda\x6b\x22\x39\xbd\x08\x05\x71\xa2\xf3\xc2\x06\xb8\x38\x57\xe2\x94\x1d\x1f\xf4\xb0\x39\x2b\xb5\x57\x45\x1d\xcb\xb4\x92\x77\xdc\x13\x8f\x25\x47\xbf\xb1\x0d\x6a\x75\x36\xfb\x71\x1e\xee\xeb\x2b\xde\x0f\x6f\xf7\x2b\xe6\xf6\xe2\x8b\xe3\x98\x86\xa0\xae\x0b\x12\xba\xdc\xf5\x53\xe5\x20\xb2\x10\xce\xe8\x9c\xa5\x9f\x4b\x72\x41\x8a\x80\xa5\xa8\xae\xd7\xed\x73\xe5\xa0\x1c\x82\x09\x24\xe3\x83\x13\x70\x54\x64\x49\xb9\x93\xc2\x53\xb3\x0e\x64\xaf\x47\x55\x47\x75\x85\x85\xb7\x6a\xb3\x21\x4b\x32\x6e\x87\x7a\xc6\x79\xe4\x19\x4f\x02\x33\xa9\xac\x43\x2e\xf6\x04\x51\x84\x98\xfd\x82\x27\x22\x5d\xbf\xaf\x0e\xfc\xff\x0b\xe8\x31\xe2\x7f\x0a\x6a\x03\x76\xb2\xe9\x58\xfb\xeb\x20\x6f\x49\x62\xa9\x10\xa5\x5e\xe7\x49\xbc\x89\xda\xaa\x0e\xe8\x1f\x24\x7f\xf1\xb7\xc9\xaf\x6f\xb8\x36\x1b\x2f\xc2\x75\x17\xfd\xd7\xaf\xa2\x19\x5f\x4d\xa8\x02\xde\xd4\x92\xc4\x8b\xf2\x79\x55\xba\x36\x92\xd0\xcb\x1f\xbc\x69\xf0\xbb\x18\x4d\x9a\x8f\xf6\xb5\x9c\xb7\x6c\x4f\xa4\xb5\xb3\x5d\x41\xb4\xab\xb9\xf4\x76\xe4\xbf\x20\x75\xa4\xb3\x03\x0a\xc5\x07\xaf\xa7\xd9\xa0\x61\x7f\xfe\x11\x00\x00\xff\xff\xab\x15\xcc\x7d\x08\x07\x00\x00")

func LocalShareFastnodeFastnodedBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareFastnodeFastnoded,
		".local/share/fastnode/fastnoded",
	)
}

func LocalShareFastnodeFastnoded() (*asset, error) {
	bytes, err := LocalShareFastnodeFastnodedBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/fastnode/fastnoded", size: 1800, mode: os.FileMode(493), modTime: time.Unix(1595245018, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareFastnodeLoginUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x53\xef\x6b\x1b\x3b\x10\xfc\xae\xbf\x62\xa2\xdc\x33\xef\x41\xce\xe7\x98\x90\x0f\x7e\x38\x25\xd0\x84\x86\xa6\xc4\xc4\x0e\x2d\x24\xa1\xc8\x77\x6b\x9f\x88\x2c\x5d\xb4\x3a\xbb\xe9\x8f\xff\xbd\x48\x67\xbb\x81\xd0\x6f\xc7\x6a\x77\x66\x76\x76\xee\xf0\xa0\x68\xd9\x17\x73\x6d\x0b\xb2\x6b\xcc\x15\xd7\xe2\x10\xb3\x5a\x33\xb8\xf4\xba\x09\x08\xea\x89\x18\xca\xc2\x35\x41\x3b\xab\x0c\x5a\x26\x6f\xd5\x8a\x8e\xa0\xf8\x89\xb1\x70\x1e\xa1\x26\x34\x8a\x79\xe3\x7c\x05\x65\x2b\x30\xd9\x8a\xa1\x60\xdc\x52\x5b\x78\x7a\x6e\x89\x03\x82\xc3\x93\x0e\x54\xf5\xc5\x61\xf7\x81\x5a\x71\xac\xce\x09\xbe\xb5\x56\xdb\x25\x9c\x4d\x68\xc6\x95\xca\x60\xa5\xca\x5a\x5b\x12\x4c\x01\x39\x09\xa1\x17\x38\x40\xe9\x56\xab\xc8\x91\xaf\x51\xb6\xde\xe0\xac\xa8\x68\x5d\xd8\xd6\x18\x0c\xcf\x7a\xc7\xff\xc7\x79\x2b\x00\x80\xca\xda\xe1\xac\x37\x84\x9c\x3a\xef\x5f\x0e\x30\xab\xa9\x9b\xd9\x61\x68\x86\x25\xaa\xa8\x8a\x2a\x7c\x1b\xb9\xf7\xab\xf7\x65\x07\xf2\x4d\x07\x1c\x8b\x85\x4e\xf4\xf7\xf7\x90\xd9\xb1\xc4\x18\x32\xcf\x6b\x32\x8d\xc4\xe3\xe3\x9e\x32\x11\xca\x3b\x56\x4b\x1a\x21\x1b\xe0\xfe\xe2\xd3\xf9\xd5\xf5\x63\x04\x7a\x05\x73\x37\xbd\xb8\x1d\x47\x94\x04\x88\xfc\x3b\x64\x16\x6b\x12\x7f\x90\x3c\xa9\x0a\xb9\x6f\x22\x1a\xf9\x11\x24\x62\x47\x1a\xdf\x3e\x71\x03\x39\xd9\x7a\x1e\xdf\x27\xe7\xd3\xe9\xe7\x9b\xdb\xf7\x22\x8a\x10\xa2\x93\x72\xed\x96\xcb\xe8\xaa\xb6\x71\xc1\x8f\x3a\x10\x36\x3a\xd4\xe9\x86\x48\xa4\xfd\x7e\x5f\x8a\xab\xcb\xe9\x58\x78\xe2\xc6\x59\xa6\xb1\xcc\xfe\x4d\x26\xe5\x39\x6b\x43\x36\x20\xdf\x40\x3e\xd8\x7f\x7e\xd4\x21\x34\x5f\x4b\x57\xd1\xaf\x07\x2b\x91\x7f\xc1\xe4\x66\x3a\x43\x7e\x09\x49\x2b\xa5\xcd\x78\xbb\x45\x2c\xec\xd2\x30\xce\x76\xba\x24\x64\x9c\x1f\x15\x45\xba\x6d\xed\x38\x8c\x4e\x4e\x4f\x87\x27\x45\x69\x34\xd9\xa0\x1a\x5d\xa4\xb8\xc8\x74\xc6\xff\xa4\x48\x74\x73\x57\xbd\x44\x45\xdd\x3e\xd9\x4e\xa4\xc4\x4f\xd4\xc9\x08\xbb\x6f\xe5\xa0\x42\xcb\x7f\x69\x0e\x4a\x9b\x6d\x73\x77\xc6\xec\x1d\x72\x7a\xc6\x00\xbd\x1e\x64\xf6\x0a\x40\xa6\xfa\x70\x30\x78\x7b\xd9\x69\x5b\x96\xc4\xbc\x68\x8d\x79\x89\xd9\x5e\x52\xf5\xc6\xda\xce\x55\x29\xc8\x30\xed\x07\x2f\x95\x36\x5d\xc8\xba\x3f\x62\x3b\x71\x84\x0f\xb3\xd9\x04\x1d\x2f\xa2\xb3\x78\xad\xa4\x9f\x02\xcb\xe4\xd7\xe4\xb1\x5b\x06\x0b\x67\x8c\xdb\xf0\x48\xee\xd1\xb3\xbd\x53\x32\x26\xe4\x77\x00\x00\x00\xff\xff\xfb\x86\xa4\xd1\xd5\x03\x00\x00")

func LocalShareFastnodeLoginUserBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareFastnodeLoginUser,
		".local/share/fastnode/login-user",
	)
}

func LocalShareFastnodeLoginUser() (*asset, error) {
	bytes, err := LocalShareFastnodeLoginUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/fastnode/login-user", size: 981, mode: os.FileMode(493), modTime: time.Unix(1599640316, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareFastnodeLogoutUser = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x41\x8b\xdb\x3e\x14\xc4\xef\xfa\x14\x13\x25\x2c\xff\xff\xc1\x56\x37\x2c\x7b\x48\x69\x7a\xeb\xa5\x85\x16\x92\x43\xa1\xf4\xa0\xc8\xcf\xb6\x58\x45\xcf\xab\x27\x65\xbb\xdf\xbe\xc8\x26\x86\x9e\x8c\xa5\xd1\xcc\x6f\x66\xbb\x31\x45\x92\xb9\xf8\x68\x28\xde\x70\xb1\x32\xaa\x2d\xce\xa3\x17\x88\x4b\x7e\xca\xc8\xf6\x85\x04\x45\x28\x45\x7b\x25\xd8\xd8\x61\xb2\x22\x6f\x9c\xba\xf9\x47\x28\x76\x02\x8b\xc0\x83\x8f\x48\xf4\x5a\x48\x32\x32\xe3\xc5\x67\xea\xd4\x76\xf9\x62\xb4\x52\x0f\x2f\x84\x54\x62\xf4\x71\x00\x47\xe4\x91\xe0\x4a\x4a\x14\x33\xae\xd6\x8d\x3e\x92\x12\xca\x68\x48\x29\xdf\x63\x03\xc7\xd7\x6b\x0d\x69\x6e\x55\x17\x70\x34\x1d\xdd\x4c\x2c\x21\x60\x7f\x7c\x78\xfc\x58\x1d\xa2\x02\x00\x72\x23\xe3\xf8\xb0\x87\x3e\x71\x4a\xef\x1b\x9c\x17\xef\xb0\x7a\x78\x41\x24\xea\xa8\xab\x1c\xa9\xd4\xf4\xb5\x65\xab\x17\x93\x3f\x3e\xe3\x51\xf5\x5e\xa9\xd9\x4f\x7f\xe3\x61\xa8\xac\x77\xc8\x3a\x03\xb8\x64\x70\x8f\xaf\x3e\x53\xdb\xb6\x5a\x25\x92\x89\xa3\xd0\x27\xbd\xfb\x6f\x4e\x6c\x1a\xf1\xa1\xca\x9b\x9f\xf8\xf1\xfd\x74\x86\x1e\x73\x9e\x0e\xc6\x04\x76\x36\x8c\x2c\xf9\xf0\xf4\xfc\xbc\x7f\x32\x2e\x78\x8a\xd9\x4e\xde\x04\x1e\xb8\x64\x3d\xb7\xfa\x5f\xd7\xf2\xbf\xb0\xfb\x8c\x86\x5e\xf1\x01\xbf\xd7\x9e\x0b\xd5\xa9\x38\x47\x22\x7d\x09\xe1\xbd\xee\x3e\x50\xf7\x0f\x94\x56\x14\x84\x56\xf9\x17\xeb\xc3\xd2\x7a\x49\x69\xe7\x6d\x84\xd2\x8d\x12\xee\xf0\xe8\x39\x04\x7e\x93\x83\x5e\xdf\xed\xee\x77\xba\x2e\xf2\x37\x00\x00\xff\xff\x4d\x20\x06\xce\x2a\x02\x00\x00")

func LocalShareFastnodeLogoutUserBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareFastnodeLogoutUser,
		".local/share/fastnode/logout-user",
	)
}

func LocalShareFastnodeLogoutUser() (*asset, error) {
	bytes, err := LocalShareFastnodeLogoutUserBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/fastnode/logout-user", size: 554, mode: os.FileMode(493), modTime: time.Unix(1592310791, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareFastnodeUninstall = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcd\x6a\xeb\x30\x10\x85\xf7\x7e\x8a\x73\x15\x93\x9f\x85\x23\xee\x03\x64\x75\x09\xdc\x2e\x1a\x83\x9b\x76\x53\xda\xa2\x58\x13\x7b\x88\x3d\x32\x92\x9c\x86\xfe\xbc\x7b\x71\x9c\x92\xd2\xa5\x46\xdf\xe1\x9b\x39\x93\x3f\x7a\xc7\xa2\x43\x9d\x24\x13\xbc\x7a\xd3\xa1\x74\x6d\x6b\xc4\x06\x44\x87\xda\x88\x6d\x08\x65\x6d\xa4\xa2\x00\x13\xe1\x7b\x89\xdc\x12\xe6\xb1\x26\x84\xd2\x73\x17\xc1\x01\x9e\x5a\x77\x24\x0b\x8e\x81\x9a\x3d\x6c\xef\x59\x2a\xf4\xc2\x12\xa2\x69\x1a\x13\xd9\xc9\x22\x79\x4f\x00\xa0\xc8\xf3\xed\x4a\xa5\xff\xf3\xdb\xb5\x5e\x36\xae\x34\x8d\x0e\xb5\xf1\xa4\x0f\x1c\x49\x9d\x91\x7f\xf7\x45\xb1\xde\x0c\xd4\x00\xeb\xb2\xf7\x9e\x24\xaa\xe4\xe7\xe7\xcb\xc3\xba\xb8\xbb\xc9\x37\x2b\x95\xce\x77\x26\x90\x98\x96\xa0\xd2\xb9\x27\x63\x1b\x96\x03\xb2\x3d\x54\x7a\x81\xd5\x42\xe1\x03\x95\xa7\x0e\x6a\xd0\x64\xc7\xe1\x1d\xc8\x22\x23\xcc\x82\x7e\x1e\x87\x5a\x57\xb3\xc5\xb8\xc2\x23\xb2\xb7\x6b\xfe\x5b\xa6\xf0\x84\xe9\x14\x54\xd6\x0e\x6a\xe3\x30\xc4\x70\x24\x1f\xd8\x09\xf6\xae\x17\x3b\x94\x74\xde\x7a\x89\x2d\xf9\x96\xc5\x44\x96\x6a\xa9\xce\xb1\x13\x47\xfc\x1d\xaf\xa0\x13\x95\xb8\xdc\x37\xca\x7f\xbb\xc6\x71\xdf\x59\x13\x49\x5d\xbb\x4c\x3e\xbf\x02\x00\x00\xff\xff\xf6\xcb\xb5\xa4\xb4\x01\x00\x00")

func LocalShareFastnodeUninstallBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareFastnodeUninstall,
		".local/share/fastnode/uninstall",
	)
}

func LocalShareFastnodeUninstall() (*asset, error) {
	bytes, err := LocalShareFastnodeUninstallBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/fastnode/uninstall", size: 436, mode: os.FileMode(493), modTime: time.Unix(1572105585, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _LocalShareFastnodeUpdate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcb\x4e\xf3\x30\x10\x85\xf7\x79\x8a\xf3\xbb\x51\x2f\x8b\xd4\xfa\x1f\xa0\x2b\x54\x09\x16\x34\x52\x28\x6c\x10\x20\x37\x9e\x26\xa3\x26\xe3\xc8\x76\x4a\xc5\xe5\xdd\x51\x9a\x22\x10\x2b\xcb\xe3\xef\xe8\x9b\xe3\xc9\x3f\xbd\x63\xd1\xa1\x4e\x92\x09\x5e\xbd\xe9\x50\xba\xb6\x35\x62\x03\xa2\x43\x6d\xc4\x36\x84\xb2\x36\x52\x51\x80\x89\xf0\xbd\x44\x6e\x09\xf3\x58\x13\x42\xe9\xb9\x8b\xe0\x00\x4f\xad\x3b\x92\x05\xc7\x40\xcd\x1e\xb6\xf7\x2c\x15\x7a\x61\x09\xd1\x34\x8d\x89\xec\x64\x91\xbc\x27\x00\x50\xe4\xf9\x76\xa5\xd2\xeb\xfc\x76\xad\x97\x8d\x2b\x4d\xa3\x43\x6d\x3c\xe9\x03\x47\x52\x67\xe4\xea\xbe\x28\xd6\x9b\x81\x1a\x60\x5d\xf6\xde\x93\x44\x95\xfc\x7e\x7c\x79\x58\x17\x77\x37\xf9\x66\xa5\xd2\xf9\xce\x04\x12\xd3\x12\x54\x3a\xf7\x64\x6c\xc3\x72\x40\xb6\x87\x4a\x2f\xb0\x5a\x28\x7c\xa0\xf2\xd4\x41\x0d\x9a\xec\x38\xdc\x03\x59\x64\x84\x59\xd0\xcf\xe3\x50\xeb\x6a\xb6\x18\x57\x78\x44\xf6\xf6\x93\xff\x96\x29\x3c\x61\x3a\x05\x95\xb5\x83\xda\x38\x0c\x31\x1c\xc9\x07\x76\x82\xbd\xeb\xc5\x0e\x9f\x74\xde\x7a\x89\x2d\xf9\x96\xc5\x44\x96\x6a\xa9\xce\xb1\x13\x47\xfc\x1f\x5b\xd0\x89\x4a\x5c\xfa\x8d\xf2\xbf\xae\x71\xdc\x77\xd6\x44\x52\x18\xcf\xe4\xf3\x2b\x00\x00\xff\xff\xf7\x0a\x07\x61\xb1\x01\x00\x00")

func LocalShareFastnodeUpdateBytes() ([]byte, error) {
	return bindataRead(
		_LocalShareFastnodeUpdate,
		".local/share/fastnode/update",
	)
}

func LocalShareFastnodeUpdate() (*asset, error) {
	bytes, err := LocalShareFastnodeUpdateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".local/share/fastnode/update", size: 433, mode: os.FileMode(493), modTime: time.Unix(1572105585, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".config/autostart/fastnode-autostart.desktop.template": ConfigAutostartFastnodeAutostartDesktopTemplate,
	".config/systemd/user/fastnode-autostart.service.template": ConfigSystemdUserFastnodeAutostartServiceTemplate,
	".config/systemd/user/fastnode-updater.service.template": ConfigSystemdUserFastnodeUpdaterServiceTemplate,
	".config/systemd/user/fastnode-updater.timer": ConfigSystemdUserFastnodeUpdaterTimer,
	".local/share/applications/fastnode-copilot.desktop.template": LocalShareApplicationsFastnodeCopilotDesktopTemplate,
	".local/share/applications/fastnode.desktop.template": LocalShareApplicationsFastnodeDesktopTemplate,
	".local/share/icons/hicolor/128x128/apps/fastnode.png": LocalShareIconsHicolor128x128AppsFastnodePng,
	".local/share/fastnode/fastnoded": LocalShareFastnodeFastnoded,
	".local/share/fastnode/login-user": LocalShareFastnodeLoginUser,
	".local/share/fastnode/logout-user": LocalShareFastnodeLogoutUser,
	".local/share/fastnode/uninstall": LocalShareFastnodeUninstall,
	".local/share/fastnode/update": LocalShareFastnodeUpdate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".config": &bintree{nil, map[string]*bintree{
		"autostart": &bintree{nil, map[string]*bintree{
			"fastnode-autostart.desktop.template": &bintree{ConfigAutostartFastnodeAutostartDesktopTemplate, map[string]*bintree{}},
		}},
		"systemd": &bintree{nil, map[string]*bintree{
			"user": &bintree{nil, map[string]*bintree{
				"fastnode-autostart.service.template": &bintree{ConfigSystemdUserFastnodeAutostartServiceTemplate, map[string]*bintree{}},
				"fastnode-updater.service.template": &bintree{ConfigSystemdUserFastnodeUpdaterServiceTemplate, map[string]*bintree{}},
				"fastnode-updater.timer": &bintree{ConfigSystemdUserFastnodeUpdaterTimer, map[string]*bintree{}},
			}},
		}},
	}},
	".local": &bintree{nil, map[string]*bintree{
		"share": &bintree{nil, map[string]*bintree{
			"applications": &bintree{nil, map[string]*bintree{
				"fastnode-copilot.desktop.template": &bintree{LocalShareApplicationsFastnodeCopilotDesktopTemplate, map[string]*bintree{}},
				"fastnode.desktop.template": &bintree{LocalShareApplicationsFastnodeDesktopTemplate, map[string]*bintree{}},
			}},
			"icons": &bintree{nil, map[string]*bintree{
				"hicolor": &bintree{nil, map[string]*bintree{
					"128x128": &bintree{nil, map[string]*bintree{
						"apps": &bintree{nil, map[string]*bintree{
							"fastnode.png": &bintree{LocalShareIconsHicolor128x128AppsFastnodePng, map[string]*bintree{}},
						}},
					}},
				}},
			}},
			"fastnode": &bintree{nil, map[string]*bintree{
				"fastnoded": &bintree{LocalShareFastnodeFastnoded, map[string]*bintree{}},
				"login-user": &bintree{LocalShareFastnodeLoginUser, map[string]*bintree{}},
				"logout-user": &bintree{LocalShareFastnodeLogoutUser, map[string]*bintree{}},
				"uninstall": &bintree{LocalShareFastnodeUninstall, map[string]*bintree{}},
				"update": &bintree{LocalShareFastnodeUpdate, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

