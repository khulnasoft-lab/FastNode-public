<filter fastnode_metrics.**>
  @type record_transformer
  <record>
    event.dataset ${tag}
  </record>
</filter>

<match fastnode_metrics.**>
  @type route
  add_tag_prefix routed

  <route **>
    copy
  </route>
  <route **>
    copy
    @label @LOG_METRICS
  </route>
</match>

<match routed.fastnode_metrics.valid.fastnode_status>
  @type kinesis_firehose
  delivery_stream_name "#{ENV.fetch('METRICS_DELIVERY_STREAM', 'fastnode_status')}"
  region us-east-1
  data_key body
</match>

<match routed.fastnode_metrics.invalid.fastnode_status>
  @type kinesis_firehose
  delivery_stream_name "#{ENV.fetch('METRICS_DELIVERY_STREAM', 'fastnode_status_invalid')}"
  region us-east-1
  data_key body
</match>

<match routed.fastnode_metrics.valid.client_events>
  @type kinesis_firehose
  delivery_stream_name "#{ENV.fetch('METRICS_DELIVERY_STREAM', 'client_events')}"
  region us-east-1
  data_key body
</match>

<match routed.fastnode_metrics.valid.fastnode_service>
  @type kinesis_firehose
  delivery_stream_name "#{ENV.fetch('METRICS_DELIVERY_STREAM', 'fastnode_service')}"
  region us-east-1
  data_key body
</match>

<label @LOG_METRICS>
  <filter routed.fastnode_metrics.invalid.*>
    @type record_transformer
    <record>
      message ${record["error"]} ${record["body"]}
    </record>
  </filter>

  <match routed.fastnode_metrics.invalid.*>
    @type elasticsearch
    hosts "#{ENV['ELASTIC_CONN_STR']}"
    index_name aws_ecs_logs
    include_timestamp true
  </match>
</label>

<filter webserver**>
  @type record_transformer
  <record>
     message ${record["log"]}
     event.dataset webservers
  </record>
</filter>

<match webserver**>
  @type elasticsearch
  hosts "#{ENV['ELASTIC_CONN_STR']}"
  index_name aws_ecs_logs
  include_timestamp true
</match>
